#include <string>
#include <vector>
#include <list>
#include <cassert>
#include <memory>
#include <iostream>
#include <fstream>
#include <functional>

#include "text_parser.hpp"
#include "ptx_program.hpp"
#include "ptx_parser.hpp"

const char* PTX_CODE1 = 
	".version 4.3\n"
	".target sm_30\n"
	".address_size 64\n"
	"\n"
	".global\t.attribute(.managed)\t.align 4\t.u32 abc;\n"
	".global\t.align 1\t.b8\t$str[5] = { 72, 105, 33, 10, 0 };\n"
	"\n"
	".extern .func (.param .b32 func_retval0) vprintf\n"
	"(\n"
	"	.param.b64 vprintf_param_0,\n"
	"	.param.b64 vprintf_param_1\n"
	")\n"
	";\n"
	"\n"
	".visible .entry _Z6tstfunPj(\n"
	".param.u64 _Z6tstfunPj_param_0\n"
	")\n"
	"{\n"
	"	ret;\n"
	"   mul.f32 %f8, %f30, 0f3FB8AA3B; \n"
	"   call.uni (retval0),\n"
	"vprintf,\n"
	"(\n"
	"	param0,\n"
	"	param1\n"
	"	); \n"
	"	ld.param.u64 %rd1, [_Z6tstfunPj_param_0];\n"
	"	cvta.to.global.u64 %rd2, %rd1;\n"
	"	mov.u32 %r1, %ntid.x;\n"
	"   BB6_1:\n"
	"	mad.lo.s32 %r4, %r2, %r1, %r3;\n"
	"	mul.wide.s32 %rd3, %r4, 4;\n"
	"	add.s64 %rd4, %rd2, %rd3;\n"
	"   @%p5 bra BB6_1;\n"
	"	.reg.b32 %r<7>;\n"
	"	.reg.b64 %rd<5>;\n"
	"\n"
	"\n"
	"	ld.param.u64 %rd1, [_Z6tstfunPj_param_0];\n"
	"	cvta.to.global.u64 %rd2, %rd1;\n"
	"	mov.u32 %r1, %ntid.x;\n"
	"	mov.u32 %r2, %ctaid.x;\n"
	"	mov.u32 %r3, %tid.x;\n"
	"   BB6_1:\n"
	"   mul.f32 %f8, %f30, 0f3FB8AA3B; \n"
	"	mad.lo.s32 %r4, %r2, %r1, %r3;\n"
	"	mul.wide.s32 %rd3, %r4, 4;\n"
	"	add.s64 %rd4, %rd2, %rd3;\n"
	"   @%p5 bra BB6_1;\n"
	"   call.uni (retval0),\n"
	"vprintf,\n"
	"(\n"
	"	param0,\n"
	"	param1\n"
	"	); \n"
	"	ld.global.u32 %r5, [%rd4];\n"
	"	add.s32 %r6, %r5, 3;\n"
	"	st.global.u32 [%rd4], %r6;\n"
	"	ret;\n"
	"}\n";

const char* PTX_CODE2 = 
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
".version 4.2\n"
".target sm_20\n"
".address_size 64\n"
"\n"
"\n"
"\n"
"\n"
"\n"
".visible .entry _Z22bpnn_layerforward_CUDAPfS_S_S_ii(\n"
".param .u64 _Z22bpnn_layerforward_CUDAPfS_S_S_ii_param_0,\n"
".param .u64 _Z22bpnn_layerforward_CUDAPfS_S_S_ii_param_1,\n"
".param .u64 _Z22bpnn_layerforward_CUDAPfS_S_S_ii_param_2,\n"
".param .u64 _Z22bpnn_layerforward_CUDAPfS_S_S_ii_param_3,\n"
".param .u32 _Z22bpnn_layerforward_CUDAPfS_S_S_ii_param_4,\n"
".param .u32 _Z22bpnn_layerforward_CUDAPfS_S_S_ii_param_5\n"
")\n"
"{\n"
".reg .pred %p<6>;\n"
".reg .f32 %f<21>;\n"
".reg .s32 %r<24>;\n"
".reg .s64 %rd<31>;\n"
"\n"
"\t.shared .align 4 .b8 _Z22bpnn_layerforward_CUDAPfS_S_S_ii$__cuda_local_var_44452_34_non_const_input_node[64];\n"
"\t.shared .align 4 .b8 _Z22bpnn_layerforward_CUDAPfS_S_S_ii$__cuda_local_var_44453_34_non_const_weight_matrix[1024];\n"
"\n"
"ld.param.u64 %rd7, [_Z22bpnn_layerforward_CUDAPfS_S_S_ii_param_0];\n"
"ld.param.u64 %rd8, [_Z22bpnn_layerforward_CUDAPfS_S_S_ii_param_2];\n"
"ld.param.u64 %rd9, [_Z22bpnn_layerforward_CUDAPfS_S_S_ii_param_3];\n"
"ld.param.u32 %r8, [_Z22bpnn_layerforward_CUDAPfS_S_S_ii_param_5];\n"
"mov.u32 %r9, %ctaid.y;\n"
"shl.b32 %r1, %r9, 4;\n"
"mov.u32 %r2, %tid.y;\n"
"mov.u32 %r3, %tid.x;\n"
"cvt.s64.s32\t%rd1, %r2;\n"
"mul.wide.s32 %rd10, %r2, 4;\n"
"mov.u64 %rd11, _Z22bpnn_layerforward_CUDAPfS_S_S_ii$__cuda_local_var_44452_34_non_const_input_node;\n"
"add.s64 %rd2, %rd11, %rd10;\n"
"setp.ne.s32\t%p2, %r3, 0;\n"
"@%p2 bra BB0_2;\n"
"\n"
"cvta.to.global.u64 %rd12, %rd7;\n"
"add.s32 %r10, %r1, %r2;\n"
"mul.wide.s32 %rd13, %r10, 4;\n"
"add.s64 %rd14, %rd12, %rd13;\n"
"ld.global.f32 %f5, [%rd14+4];\n"
"st.shared.f32 [%rd2], %f5;\n"
"\n"
"BB0_2:\n"
"cvta.to.global.u64 %rd3, %rd8;\n"
"add.s32 %r11, %r2, %r1;\n"
"add.s32 %r12, %r8, 1;\n"
"add.s32 %r13, %r8, %r3;\n"
"mad.lo.s32 %r4, %r11, %r12, %r13;\n"
"bar.sync 0;\n"
"mul.wide.s32 %rd15, %r4, 4;\n"
"add.s64 %rd4, %rd3, %rd15;\n"
"ld.global.f32 %f6, [%rd4+8];\n"
"cvt.s64.s32\t%rd5, %r3;\n"
"shl.b64 %rd16, %rd1, 6;\n"
"mov.u64 %rd17, _Z22bpnn_layerforward_CUDAPfS_S_S_ii$__cuda_local_var_44453_34_non_const_weight_matrix;\n"
"add.s64 %rd18, %rd17, %rd16;\n"
"mul.wide.s32 %rd19, %r3, 4;\n"
"add.s64 %rd6, %rd18, %rd19;\n"
"st.shared.f32 [%rd6], %f6;\n"
"bar.sync 0;\n"
"ld.shared.f32 %f7, [%rd2];\n"
"ld.shared.f32 %f8, [%rd6];\n"
"mul.f32 %f9, %f8, %f7;\n"
"st.shared.f32 [%rd6], %f9;\n"
"bar.sync 0;\n"
"mov.f32 %f10, 0f41800000;\n"
"lg2.approx.f32 %f1, %f10;\n"
"setp.ltu.f32\t%p3, %f1, 0f3F800000;\n"
"@%p3 bra BB0_7;\n"
"\n"
"mov.f32 %f12, 0f40000000;\n"
"lg2.approx.f32 %f2, %f12;\n"
"mov.u32 %r23, 1;\n"
"mov.f32 %f20, 0f3F800000;\n"
"shl.b64 %rd23, %rd5, 2;\n"
"\n"
"BB0_4:\n"
"mov.f32 %f3, %f20;\n"
"mul.f32 %f13, %f3, %f2;\n"
"ex2.approx.f32 %f14, %f13;\n"
"cvt.rzi.s32.f32\t%r6, %f14;\n"
"rem.s32 %r15, %r2, %r6;\n"
"setp.ne.s32\t%p4, %r15, 0;\n"
"@%p4 bra BB0_6;\n"
"\n"
"ld.shared.f32 %f15, [%rd6];\n"
"shr.u32 %r16, %r6, 31;\n"
"add.s32 %r17, %r6, %r16;\n"
"shr.s32 %r18, %r17, 1;\n"
"add.s32 %r19, %r18, %r2;\n"
"mul.wide.s32 %rd20, %r19, 64;\n"
"add.s64 %rd22, %rd17, %rd20;\n"
"add.s64 %rd24, %rd22, %rd23;\n"
"ld.shared.f32 %f16, [%rd24];\n"
"add.f32 %f17, %f15, %f16;\n"
"st.shared.f32 [%rd6], %f17;\n"
"\n"
"BB0_6:\n"
"bar.sync 0;\n"
"add.s32 %r23, %r23, 1;\n"
"cvt.rn.f32.s32\t%f20, %r23;\n"
"setp.le.f32\t%p5, %f20, %f1;\n"
"@%p5 bra BB0_4;\n"
"\n"
"BB0_7:\n"
"setp.eq.s32\t%p1, %r3, 0;\n"
"ld.shared.f32 %f18, [%rd6];\n"
"st.global.f32 [%rd4+8], %f18;\n"
"bar.sync 0;\n"
"@!%p1 bra BB0_9;\n"
"bra.uni BB0_8;\n"
"\n"
"BB0_8:\n"
"cvt.u32.u64\t%r20, %rd1;\n"
"shl.b64 %rd25, %rd1, 2;\n"
"add.s64 %rd27, %rd17, %rd25;\n"
"ld.shared.f32 %f19, [%rd27];\n"
"mad.lo.s32 %r22, %r9, %r8, %r20;\n"
"cvta.to.global.u64 %rd28, %rd9;\n"
"mul.wide.s32 %rd29, %r22, 4;\n"
"add.s64 %rd30, %rd28, %rd29;\n"
"st.global.f32 [%rd30], %f19;\n"
"\n"
"BB0_9:\n"
"ret;\n"
"}\n"
"\n"
"\n"
".visible .entry _Z24bpnn_adjust_weights_cudaPfiS_iS_S_(\n"
".param .u64 _Z24bpnn_adjust_weights_cudaPfiS_iS_S__param_0,\n"
".param .u32 _Z24bpnn_adjust_weights_cudaPfiS_iS_S__param_1,\n"
".param .u64 _Z24bpnn_adjust_weights_cudaPfiS_iS_S__param_2,\n"
".param .u32 _Z24bpnn_adjust_weights_cudaPfiS_iS_S__param_3,\n"
".param .u64 _Z24bpnn_adjust_weights_cudaPfiS_iS_S__param_4,\n"
".param .u64 _Z24bpnn_adjust_weights_cudaPfiS_iS_S__param_5\n"
")\n"
"{\n"
".reg .pred %p<2>;\n"
".reg .f32 %f<17>;\n"
".reg .s32 %r<12>;\n"
".reg .f64 %fd<25>;\n"
".reg .s64 %rd<19>;\n"
"\n"
"\n"
"ld.param.u64 %rd4, [_Z24bpnn_adjust_weights_cudaPfiS_iS_S__param_0];\n"
"ld.param.u32 %r4, [_Z24bpnn_adjust_weights_cudaPfiS_iS_S__param_1];\n"
"ld.param.u64 %rd5, [_Z24bpnn_adjust_weights_cudaPfiS_iS_S__param_2];\n"
"ld.param.u64 %rd6, [_Z24bpnn_adjust_weights_cudaPfiS_iS_S__param_4];\n"
"ld.param.u64 %rd7, [_Z24bpnn_adjust_weights_cudaPfiS_iS_S__param_5];\n"
"cvta.to.global.u64 %rd1, %rd6;\n"
"mov.u32 %r1, %ctaid.y;\n"
"shl.b32 %r5, %r1, 4;\n"
"mov.u32 %r2, %tid.y;\n"
"add.s32 %r6, %r5, %r2;\n"
"add.s32 %r7, %r4, 1;\n"
"mov.u32 %r3, %tid.x;\n"
"add.s32 %r8, %r4, %r3;\n"
"mad.lo.s32 %r9, %r6, %r7, %r8;\n"
"cvta.to.global.u64 %rd8, %rd4;\n"
"mul.wide.s32 %rd9, %r3, 4;\n"
"add.s64 %rd2, %rd8, %rd9;\n"
"ld.global.f32 %f1, [%rd2+4];\n"
"cvt.f64.f32\t%fd1, %f1;\n"
"mul.f64 %fd2, %fd1, 0d3FD3333333333333;\n"
"cvta.to.global.u64 %rd10, %rd5;\n"
"mul.wide.s32 %rd11, %r6, 4;\n"
"add.s64 %rd12, %rd10, %rd11;\n"
"ld.global.f32 %f2, [%rd12+4];\n"
"cvt.f64.f32\t%fd3, %f2;\n"
"cvta.to.global.u64 %rd3, %rd7;\n"
"mul.wide.s32 %rd13, %r9, 4;\n"
"add.s64 %rd14, %rd3, %rd13;\n"
"ld.global.f32 %f3, [%rd14+8];\n"
"cvt.f64.f32\t%fd4, %f3;\n"
"mul.f64 %fd5, %fd4, 0d3FD3333333333333;\n"
"fma.rn.f64 %fd6, %fd2, %fd3, %fd5;\n"
"add.s64 %rd15, %rd1, %rd13;\n"
"ld.global.f32 %f4, [%rd15+8];\n"
"cvt.f64.f32\t%fd7, %f4;\n"
"add.f64 %fd8, %fd7, %fd6;\n"
"cvt.rn.f32.f64\t%f5, %fd8;\n"
"st.global.f32 [%rd15+8], %f5;\n"
"ld.global.f32 %f6, [%rd2+4];\n"
"cvt.f64.f32\t%fd9, %f6;\n"
"mul.f64 %fd10, %fd9, 0d3FD3333333333333;\n"
"ld.global.f32 %f7, [%rd12+4];\n"
"cvt.f64.f32\t%fd11, %f7;\n"
"ld.global.f32 %f8, [%rd14+8];\n"
"cvt.f64.f32\t%fd12, %f8;\n"
"mul.f64 %fd13, %fd12, 0d3FD3333333333333;\n"
"fma.rn.f64 %fd14, %fd10, %fd11, %fd13;\n"
"cvt.rn.f32.f64\t%f9, %fd14;\n"
"st.global.f32 [%rd14+8], %f9;\n"
"bar.sync 0;\n"
"or.b32 %r10, %r2, %r1;\n"
"setp.ne.s32\t%p1, %r10, 0;\n"
"@%p1 bra BB1_2;\n"
"\n"
"add.s32 %r11, %r3, 1;\n"
"ld.global.f32 %f10, [%rd2+4];\n"
"cvt.f64.f32\t%fd15, %f10;\n"
"mul.wide.s32 %rd16, %r11, 4;\n"
"add.s64 %rd17, %rd3, %rd16;\n"
"ld.global.f32 %f11, [%rd17];\n"
"cvt.f64.f32\t%fd16, %f11;\n"
"mul.f64 %fd17, %fd16, 0d3FD3333333333333;\n"
"fma.rn.f64 %fd18, %fd15, 0d3FD3333333333333, %fd17;\n"
"add.s64 %rd18, %rd1, %rd16;\n"
"ld.global.f32 %f12, [%rd18];\n"
"cvt.f64.f32\t%fd19, %f12;\n"
"add.f64 %fd20, %fd19, %fd18;\n"
"cvt.rn.f32.f64\t%f13, %fd20;\n"
"st.global.f32 [%rd18], %f13;\n"
"ld.global.f32 %f14, [%rd2+4];\n"
"cvt.f64.f32\t%fd21, %f14;\n"
"ld.global.f32 %f15, [%rd17];\n"
"cvt.f64.f32\t%fd22, %f15;\n"
"mul.f64 %fd23, %fd22, 0d3FD3333333333333;\n"
"fma.rn.f64 %fd24, %fd21, 0d3FD3333333333333, %fd23;\n"
"cvt.rn.f32.f64\t%f16, %fd24;\n"
"st.global.f32 [%rd17], %f16;\n"
"\n"
"BB1_2:\n"
"ret;\n"
"}\n"
"\n"
"\n"
"";

const char* PTX_CODE3 = 
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
".version 4.3\n"
".target sm_20\n"
".address_size 64\n"
"\n"
"\n"
".const .align 8 .b8 d_common_change[16];\n"
".const .align 8 .b8 d_common[520];\n"
".const .align 8 .b8 d_unique[8160];\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
".visible .entry _Z6kernelv(\n"
"\n"
")\n"
"{\n"
"ld.const.v2.u32 {%r489, %r490}, [d_common];\n"
".reg .pred %p<153>;\n"
".reg .f32 %f<159>;\n"
".reg .b32 %r<695>;\n"
".reg .f64 %fd<7>;\n"
".reg .b64 %rd<476>;\n"
"\n"
"\t.shared .align 4 .b8 _Z6kernelv$__cuda_local_var_47816_32_non_const_in_partial_sum[204];\n"
"\n"
"\t.shared .align 4 .b8 _Z6kernelv$__cuda_local_var_47817_32_non_const_in_sqr_partial_sum[204];\n"
"\n"
"\t.shared .align 4 .f32 _Z6kernelv$__cuda_local_var_47818_32_non_const_in_final_sum;\n"
"\n"
"\t.shared .align 4 .f32 _Z6kernelv$__cuda_local_var_47819_32_non_const_in_sqr_final_sum;\n"
"\n"
"\t.shared .align 4 .f32 _Z6kernelv$__cuda_local_var_47824_32_non_const_denomT;\n"
"\n"
"\t.shared .align 4 .b8 _Z6kernelv$__cuda_local_var_47825_32_non_const_par_max_val[524];\n"
"\n"
"\t.shared .align 4 .b8 _Z6kernelv$__cuda_local_var_47826_30_non_const_par_max_coo[524];\n"
"\n"
"\t.shared .align 4 .b8 _Z6kernelv$__cuda_local_var_47828_32_non_const_d_in_mod_temp[10404];\n"
"\n"
"mov.u32 %r293, %ctaid.x;\n"
"mov.u32 %r1, %tid.x;\n"
"ld.const.u32 %r2, [d_common_change+8];\n"
"mul.wide.s32 %rd171, %r293, 160;\n"
"mov.u64 %rd172, d_unique;\n"
"add.s64 %rd1, %rd172, %rd171;\n"
"setp.ne.s32\t%p3, %r2, 0;\n"
"@%p3 bra BB0_6;\n"
"\n"
"ld.const.u64 %rd173, [%rd1+32];\n"
"cvta.to.global.u64 %rd3, %rd173;\n"
"ld.const.u32 %r294, [%rd1+44];\n"
"cvt.s64.s32\t%rd4, %r294;\n"
"mul.wide.s32 %rd174, %r294, 4;\n"
"add.s64 %rd474, %rd3, %rd174;\n"
"setp.ne.s32\t%p4, %r1, 0;\n"
"mov.u32 %r694, %r1;\n"
"@%p4 bra BB0_3;\n"
"\n"
"ld.const.u32 %r296, [d_common+16];\n"
"ld.const.u32 %r297, [%rd1+40];\n"
"mul.lo.s32 %r298, %r296, %r297;\n"
"ld.const.u64 %rd175, [%rd1];\n"
"cvta.to.global.u64 %rd176, %rd175;\n"
"mul.wide.s32 %rd177, %r297, 4;\n"
"add.s64 %rd178, %rd176, %rd177;\n"
"ldu.global.u32 %r299, [%rd178];\n"
"ld.const.u64 %rd179, [%rd1+16];\n"
"cvta.to.global.u64 %rd180, %rd179;\n"
"mul.wide.s32 %rd181, %r298, 4;\n"
"add.s64 %rd182, %rd180, %rd181;\n"
"ld.const.u64 %rd183, [%rd1+8];\n"
"ld.const.u64 %rd184, [%rd1+24];\n"
"st.global.u32 [%rd182], %r299;\n"
"cvta.to.global.u64 %rd185, %rd183;\n"
"add.s64 %rd186, %rd185, %rd177;\n"
"ld.global.u32 %r300, [%rd186];\n"
"cvta.to.global.u64 %rd187, %rd184;\n"
"add.s64 %rd188, %rd187, %rd181;\n"
"st.global.u32 [%rd188], %r300;\n"
"mov.u32 %r295, 0;\n"
"mov.u32 %r694, %r295;\n"
"\n"
"BB0_3:\n"
"mov.u32 %r655, %r694;\n"
"mov.u32 %r693, %r655;\n"
"ld.const.u32 %r4, [d_common+212];\n"
"setp.ge.s32\t%p5, %r693, %r4;\n"
"@%p5 bra BB0_6;\n"
"\n"
"ld.const.u64 %rd189, [%rd1];\n"
"cvta.to.global.u64 %rd190, %rd189;\n"
"ld.const.u32 %r301, [%rd1+40];\n"
"mul.wide.s32 %rd191, %r301, 4;\n"
"add.s64 %rd6, %rd190, %rd191;\n"
"ld.const.u64 %rd192, [%rd1+8];\n"
"cvta.to.global.u64 %rd193, %rd192;\n"
"add.s64 %rd7, %rd193, %rd191;\n"
"ld.const.u32 %r5, [d_common+204];\n"
"ld.const.u32 %r6, [d_common+20];\n"
"ld.const.u64 %rd194, [d_common_change];\n"
"cvta.to.global.u64 %rd8, %rd194;\n"
"\n"
"BB0_5:\n"
"add.s32 %r302, %r693, 1;\n"
"rem.s32 %r303, %r302, %r5;\n"
"div.s32 %r304, %r302, %r5;\n"
"setp.eq.s32\t%p6, %r303, 0;\n"
"selp.b32\t%r305, -1, 0, %p6;\n"
"add.s32 %r306, %r305, %r304;\n"
"selp.b32\t%r307, %r5, %r303, %p6;\n"
"ld.global.u32 %r308, [%rd7];\n"
"add.s32 %r309, %r306, %r308;\n"
"add.s32 %r310, %r309, -26;\n"
"ld.global.u32 %r311, [%rd6];\n"
"add.s32 %r312, %r307, %r311;\n"
"add.s32 %r313, %r312, -27;\n"
"mad.lo.s32 %r314, %r310, %r6, %r313;\n"
"mul.wide.s32 %rd195, %r314, 4;\n"
"add.s64 %rd196, %rd8, %rd195;\n"
"ld.global.f32 %f45, [%rd196];\n"
"mad.lo.s32 %r315, %r5, %r306, %r307;\n"
"add.s32 %r316, %r315, -1;\n"
"cvt.s64.s32\t%rd197, %r316;\n"
"add.s64 %rd198, %rd197, %rd4;\n"
"shl.b64 %rd199, %rd198, 2;\n"
"add.s64 %rd200, %rd3, %rd199;\n"
"st.global.f32 [%rd200], %f45;\n"
"add.s32 %r693, %r693, 256;\n"
"setp.lt.s32\t%p7, %r693, %r4;\n"
"@%p7 bra BB0_5;\n"
"\n"
"BB0_6:\n"
"setp.eq.s32\t%p8, %r2, 0;\n"
"mov.u32 %r620, 0;\n"
"@%p8 bra BB0_154;\n"
"\n"
"ld.const.u32 %r9, [d_common+228];\n"
"setp.ge.s32\t%p9, %r1, %r9;\n"
"@%p9 bra BB0_10;\n"
"\n"
"ld.const.u64 %rd201, [%rd1];\n"
"cvta.to.global.u64 %rd202, %rd201;\n"
"ld.const.u32 %r318, [%rd1+40];\n"
"mul.wide.s32 %rd203, %r318, 4;\n"
"add.s64 %rd204, %rd202, %rd203;\n"
"ld.const.u64 %rd205, [%rd1+8];\n"
"cvta.to.global.u64 %rd206, %rd205;\n"
"add.s64 %rd207, %rd206, %rd203;\n"
"ld.const.u32 %r319, [d_common];\n"
"ld.global.u32 %r320, [%rd207];\n"
"add.s32 %r321, %r320, -1;\n"
"sub.s32 %r10, %r321, %r319;\n"
"ld.global.u32 %r322, [%rd204];\n"
"add.s32 %r323, %r322, -2;\n"
"sub.s32 %r11, %r323, %r319;\n"
"ld.const.u64 %rd208, [%rd1+48];\n"
"cvta.to.global.u64 %rd209, %rd208;\n"
"ld.const.u32 %r12, [d_common+220];\n"
"ld.const.u32 %r13, [d_common+20];\n"
"ld.const.u64 %rd210, [d_common_change];\n"
"cvta.to.global.u64 %rd10, %rd210;\n"
"mul.wide.s32 %rd211, %r1, 4;\n"
"add.s64 %rd431, %rd209, %rd211;\n"
"mov.u32 %r692, %r1;\n"
"\n"
"BB0_9:\n"
"add.s32 %r324, %r692, 1;\n"
"rem.s32 %r325, %r324, %r12;\n"
"div.s32 %r326, %r324, %r12;\n"
"setp.eq.s32\t%p10, %r325, 0;\n"
"selp.b32\t%r327, -1, 0, %p10;\n"
"selp.b32\t%r328, %r12, %r325, %p10;\n"
"add.s32 %r329, %r10, %r326;\n"
"add.s32 %r330, %r329, %r327;\n"
"add.s32 %r331, %r11, %r328;\n"
"mad.lo.s32 %r332, %r330, %r13, %r331;\n"
"mul.wide.s32 %rd212, %r332, 4;\n"
"add.s64 %rd213, %rd10, %rd212;\n"
"ld.global.f32 %f46, [%rd213];\n"
"st.global.f32 [%rd431], %f46;\n"
"add.s64 %rd431, %rd431, 1024;\n"
"add.s32 %r692, %r692, 256;\n"
"setp.lt.s32\t%p11, %r692, %r9;\n"
"@%p11 bra BB0_9;\n"
"\n"
"BB0_10:\n"
"bar.sync 0;\n"
"ld.const.u64 %rd214, [%rd1+32];\n"
"cvta.to.global.u64 %rd15, %rd214;\n"
"ld.const.u32 %r16, [%rd1+44];\n"
"cvt.s64.s32\t%rd16, %r16;\n"
"ld.const.u32 %r17, [d_common+212];\n"
"setp.ge.s32\t%p12, %r1, %r17;\n"
"@%p12 bra BB0_13;\n"
"\n"
"ld.const.u32 %r18, [d_common+204];\n"
"mul.wide.s32 %rd215, %r1, 4;\n"
"mov.u64 %rd216, _Z6kernelv$__cuda_local_var_47828_32_non_const_d_in_mod_temp;\n"
"add.s64 %rd432, %rd216, %rd215;\n"
"mov.u32 %r691, %r1;\n"
"\n"
"BB0_12:\n"
"add.s32 %r333, %r691, 1;\n"
"rem.s32 %r334, %r333, %r18;\n"
"div.s32 %r335, %r333, %r18;\n"
"setp.eq.s32\t%p13, %r334, 0;\n"
"selp.b32\t%r336, %r18, %r334, %p13;\n"
"selp.u32\t%r337, 1, 0, %p13;\n"
"add.s32 %r338, %r18, -1;\n"
"sub.s32 %r339, %r338, %r335;\n"
"add.s32 %r340, %r339, %r337;\n"
"sub.s32 %r341, %r18, %r336;\n"
"mad.lo.s32 %r342, %r340, %r18, %r341;\n"
"cvt.s64.s32\t%rd217, %r342;\n"
"add.s64 %rd218, %rd217, %rd16;\n"
"shl.b64 %rd219, %rd218, 2;\n"
"add.s64 %rd220, %rd15, %rd219;\n"
"ld.global.f32 %f47, [%rd220];\n"
"st.shared.f32 [%rd432], %f47;\n"
"add.s64 %rd432, %rd432, 1024;\n"
"add.s32 %r691, %r691, 256;\n"
"setp.lt.s32\t%p14, %r691, %r17;\n"
"@%p14 bra BB0_12;\n"
"\n"
"BB0_13:\n"
"bar.sync 0;\n"
"ld.const.u32 %r21, [d_common+244];\n"
"setp.ge.s32\t%p15, %r1, %r21;\n"
"@%p15 bra BB0_21;\n"
"\n"
"ld.const.u64 %rd221, [%rd1+56];\n"
"cvta.to.global.u64 %rd20, %rd221;\n"
"ld.const.u64 %rd222, [%rd1+48];\n"
"cvta.to.global.u64 %rd223, %rd222;\n"
"ld.const.u32 %r22, [d_common+236];\n"
"ld.const.u32 %r23, [d_common+256];\n"
"ld.const.u32 %r24, [d_common+224];\n"
"ld.const.u32 %r25, [d_common+208];\n"
"ld.const.u32 %r26, [d_common+252];\n"
"ld.const.u32 %r27, [d_common+220];\n"
"ld.const.u32 %r28, [d_common+204];\n"
"add.s64 %rd21, %rd223, -4;\n"
"mov.u32 %r690, %r1;\n"
"\n"
"BB0_15:\n"
"add.s32 %r343, %r690, 1;\n"
"rem.s32 %r344, %r343, %r22;\n"
"div.s32 %r30, %r343, %r22;\n"
"setp.eq.s32\t%p16, %r344, 0;\n"
"setp.ne.s32\t%p17, %r344, 0;\n"
"selp.u32\t%r31, 1, 0, %p17;\n"
"selp.b32\t%r32, %r22, %r344, %p16;\n"
"add.s32 %r345, %r23, %r30;\n"
"add.s32 %r346, %r345, %r31;\n"
"add.s32 %r347, %r346, 1;\n"
"setp.ge.s32\t%p18, %r346, %r24;\n"
"sub.s32 %r348, %r347, %r24;\n"
"selp.b32\t%r581, %r348, 1, %p18;\n"
"min.s32 %r34, %r25, %r346;\n"
"add.s32 %r35, %r26, %r32;\n"
"min.s32 %r36, %r28, %r35;\n"
"setp.gt.s32\t%p19, %r581, %r34;\n"
"mov.f32 %f138, 0f00000000;\n"
"@%p19 bra BB0_20;\n"
"\n"
"add.s32 %r350, %r35, 1;\n"
"setp.ge.s32\t%p20, %r35, %r27;\n"
"sub.s32 %r351, %r350, %r27;\n"
"selp.b32\t%r37, %r351, 1, %p20;\n"
"setp.gt.s32\t%p21, %r27, %r35;\n"
"selp.b32\t%r353, %r27, %r35, %p21;\n"
"sub.s32 %r38, %r353, %r27;\n"
"add.s32 %r354, %r24, %r23;\n"
"add.s32 %r355, %r354, %r31;\n"
"add.s32 %r356, %r355, %r30;\n"
"add.s32 %r357, %r23, %r31;\n"
"add.s32 %r358, %r357, %r30;\n"
"setp.gt.s32\t%p22, %r24, %r358;\n"
"selp.b32\t%r359, %r24, %r358, %p22;\n"
"sub.s32 %r360, %r356, %r359;\n"
"mad.lo.s32 %r361, %r27, %r360, %r35;\n"
"sub.s32 %r39, %r361, %r353;\n"
"sub.s32 %r362, %r359, %r24;\n"
"mad.lo.s32 %r40, %r28, %r362, %r38;\n"
"mov.f32 %f138, 0f00000000;\n"
"mov.u32 %r580, 0;\n"
"\n"
"BB0_17:\n"
"mov.u32 %r42, %r581;\n"
"neg.s32 %r363, %r27;\n"
"mad.lo.s32 %r364, %r363, %r580, %r39;\n"
"mul.wide.s32 %rd224, %r364, 4;\n"
"add.s64 %rd434, %rd21, %rd224;\n"
"mad.lo.s32 %r365, %r28, %r580, %r40;\n"
"mul.wide.s32 %rd225, %r365, 4;\n"
"mov.u64 %rd226, _Z6kernelv$__cuda_local_var_47828_32_non_const_d_in_mod_temp;\n"
"add.s64 %rd433, %rd226, %rd225;\n"
"setp.gt.s32\t%p23, %r37, %r36;\n"
"mov.u32 %r582, %r38;\n"
"@%p23 bra BB0_19;\n"
"\n"
"BB0_18:\n"
"mov.u32 %r43, %r582;\n"
"ld.global.f32 %f50, [%rd434];\n"
"ld.shared.f32 %f51, [%rd433];\n"
"fma.rn.f32 %f138, %f51, %f50, %f138;\n"
"add.s64 %rd434, %rd434, -4;\n"
"add.s64 %rd433, %rd433, 4;\n"
"add.s32 %r44, %r43, 1;\n"
"setp.lt.s32\t%p24, %r44, %r36;\n"
"mov.u32 %r582, %r44;\n"
"@%p24 bra BB0_18;\n"
"\n"
"BB0_19:\n"
"add.s32 %r581, %r42, 1;\n"
"add.s32 %r580, %r580, 1;\n"
"setp.lt.s32\t%p25, %r42, %r34;\n"
"@%p25 bra BB0_17;\n"
"\n"
"BB0_20:\n"
"mul.wide.s32 %rd227, %r690, 4;\n"
"add.s64 %rd228, %rd20, %rd227;\n"
"st.global.f32 [%rd228], %f138;\n"
"add.s32 %r690, %r690, 256;\n"
"setp.lt.s32\t%p26, %r690, %r21;\n"
"@%p26 bra BB0_15;\n"
"\n"
"BB0_21:\n"
"bar.sync 0;\n"
"ld.const.u32 %r48, [d_common+276];\n"
"setp.ge.s32\t%p27, %r1, %r48;\n"
"@%p27 bra BB0_26;\n"
"\n"
"ld.const.u64 %rd229, [%rd1+48];\n"
"cvta.to.global.u64 %rd28, %rd229;\n"
"ld.const.u64 %rd230, [%rd1+72];\n"
"cvta.to.global.u64 %rd231, %rd230;\n"
"ld.const.u32 %r49, [d_common+268];\n"
"ld.const.u32 %r50, [d_common+220];\n"
"ld.const.u32 %r51, [d_common+260];\n"
"add.s32 %r52, %r50, %r51;\n"
"ld.const.u64 %rd232, [d_common+264];\n"
"cvt.u32.u64\t%r53, %rd232;\n"
"ld.const.u32 %r366, [d_common+224];\n"
"add.s32 %r54, %r366, %r53;\n"
"shr.u64 %rd233, %rd232, 32;\n"
"cvt.u32.u64\t%r55, %rd233;\n"
"mul.wide.s32 %rd234, %r1, 4;\n"
"add.s64 %rd435, %rd231, %rd234;\n"
"mov.u32 %r583, %r49;\n"
"mov.u32 %r689, %r1;\n"
"\n"
"BB0_23:\n"
"mov.u32 %r56, %r583;\n"
"add.s32 %r367, %r689, 1;\n"
"rem.s32 %r368, %r367, %r56;\n"
"div.s32 %r369, %r367, %r56;\n"
"setp.eq.s32\t%p28, %r368, 0;\n"
"selp.b32\t%r370, -1, 0, %p28;\n"
"add.s32 %r58, %r370, %r369;\n"
"selp.b32\t%r59, %r56, %r368, %p28;\n"
"setp.gt.s32\t%p29, %r59, %r51;\n"
"setp.le.s32\t%p30, %r59, %r52;\n"
"and.pred %p31, %p29, %p30;\n"
"add.s32 %r371, %r53, -1;\n"
"setp.gt.s32\t%p32, %r58, %r371;\n"
"and.pred %p33, %p31, %p32;\n"
"setp.lt.s32\t%p34, %r58, %r54;\n"
"and.pred %p35, %p33, %p34;\n"
"mov.f32 %f139, 0f00000000;\n"
"@!%p35 bra BB0_25;\n"
"bra.uni BB0_24;\n"
"\n"
"BB0_24:\n"
"add.s32 %r372, %r59, -1;\n"
"sub.s32 %r373, %r372, %r51;\n"
"sub.s32 %r374, %r58, %r53;\n"
"mad.lo.s32 %r375, %r50, %r374, %r373;\n"
"mul.wide.s32 %rd235, %r375, 4;\n"
"add.s64 %rd236, %rd28, %rd235;\n"
"ld.global.f32 %f139, [%rd236];\n"
"\n"
"BB0_25:\n"
"st.global.f32 [%rd435], %f139;\n"
"add.s64 %rd435, %rd435, 1024;\n"
"add.s32 %r689, %r689, 256;\n"
"setp.lt.s32\t%p36, %r689, %r48;\n"
"mov.u32 %r583, %r55;\n"
"@%p36 bra BB0_23;\n"
"\n"
"BB0_26:\n"
"bar.sync 0;\n"
"ld.const.u32 %r61, [d_common+272];\n"
"setp.ge.s32\t%p37, %r1, %r61;\n"
"@%p37 bra BB0_32;\n"
"\n"
"ld.const.u64 %rd237, [%rd1+72];\n"
"cvta.to.global.u64 %rd32, %rd237;\n"
"ld.const.u32 %r62, [d_common+268];\n"
"shl.b32 %r63, %r62, 8;\n"
"mul.lo.s32 %r64, %r1, %r62;\n"
"mov.u32 %r584, 0;\n"
"mov.u32 %r688, %r1;\n"
"\n"
"BB0_28:\n"
"mul.lo.s32 %r585, %r62, %r688;\n"
"setp.lt.s32\t%p38, %r62, 1;\n"
"@%p38 bra BB0_31;\n"
"\n"
"mad.lo.s32 %r377, %r63, %r584, %r64;\n"
"mul.wide.s32 %rd238, %r377, 4;\n"
"add.s64 %rd436, %rd32, %rd238;\n"
"add.s32 %r68, %r62, %r585;\n"
"mov.f32 %f140, 0f00000000;\n"
"\n"
"BB0_30:\n"
"ld.global.f32 %f54, [%rd436];\n"
"add.f32 %f140, %f140, %f54;\n"
"st.global.f32 [%rd436], %f140;\n"
"add.s64 %rd436, %rd436, 4;\n"
"add.s32 %r585, %r585, 1;\n"
"setp.lt.s32\t%p39, %r585, %r68;\n"
"@%p39 bra BB0_30;\n"
"\n"
"BB0_31:\n"
"add.s32 %r688, %r688, 256;\n"
"setp.lt.s32\t%p40, %r688, %r61;\n"
"add.s32 %r584, %r584, 1;\n"
"@%p40 bra BB0_28;\n"
"\n"
"BB0_32:\n"
"bar.sync 0;\n"
"ld.const.u32 %r73, [d_common+292];\n"
"setp.ge.s32\t%p41, %r1, %r73;\n"
"@%p41 bra BB0_35;\n"
"\n"
"ld.const.u64 %rd239, [%rd1+72];\n"
"cvta.to.global.u64 %rd36, %rd239;\n"
"ld.const.u64 %rd240, [%rd1+80];\n"
"cvta.to.global.u64 %rd241, %rd240;\n"
"ld.const.u32 %r74, [d_common+284];\n"
"ld.const.u32 %r75, [d_common+300];\n"
"ld.const.u32 %r76, [d_common+308];\n"
"ld.const.u32 %r77, [d_common+268];\n"
"mul.wide.s32 %rd242, %r1, 4;\n"
"add.s64 %rd437, %rd241, %rd242;\n"
"mov.u32 %r687, %r1;\n"
"\n"
"BB0_34:\n"
"add.s32 %r378, %r687, 1;\n"
"rem.s32 %r379, %r378, %r74;\n"
"div.s32 %r380, %r378, %r74;\n"
"setp.eq.s32\t%p42, %r379, 0;\n"
"selp.b32\t%r381, -1, 0, %p42;\n"
"selp.b32\t%r382, %r74, %r379, %p42;\n"
"add.s32 %r383, %r380, %r381;\n"
"add.s32 %r384, %r383, %r76;\n"
"add.s32 %r385, %r384, -1;\n"
"add.s32 %r386, %r382, %r75;\n"
"add.s32 %r387, %r386, -2;\n"
"mad.lo.s32 %r388, %r77, %r385, %r387;\n"
"mul.wide.s32 %rd243, %r388, 4;\n"
"add.s64 %rd244, %rd36, %rd243;\n"
"ld.global.f32 %f55, [%rd244];\n"
"st.global.f32 [%rd437], %f55;\n"
"add.s64 %rd437, %rd437, 1024;\n"
"add.s32 %r687, %r687, 256;\n"
"setp.lt.s32\t%p43, %r687, %r73;\n"
"@%p43 bra BB0_34;\n"
"\n"
"BB0_35:\n"
"bar.sync 0;\n"
"ld.const.u32 %r80, [d_common+340];\n"
"setp.ge.s32\t%p44, %r1, %r80;\n"
"@%p44 bra BB0_38;\n"
"\n"
"ld.const.u64 %rd245, [%rd1+72];\n"
"cvta.to.global.u64 %rd40, %rd245;\n"
"ld.const.u64 %rd246, [%rd1+88];\n"
"cvta.to.global.u64 %rd247, %rd246;\n"
"ld.const.u32 %r81, [d_common+332];\n"
"ld.const.u32 %r82, [d_common+316];\n"
"ld.const.u32 %r83, [d_common+324];\n"
"ld.const.u32 %r84, [d_common+268];\n"
"mul.wide.s32 %rd248, %r1, 4;\n"
"add.s64 %rd438, %rd247, %rd248;\n"
"mov.u32 %r686, %r1;\n"
"\n"
"BB0_37:\n"
"add.s32 %r389, %r686, 1;\n"
"rem.s32 %r390, %r389, %r81;\n"
"div.s32 %r391, %r389, %r81;\n"
"setp.eq.s32\t%p45, %r390, 0;\n"
"selp.b32\t%r392, -1, 0, %p45;\n"
"selp.b32\t%r393, %r81, %r390, %p45;\n"
"add.s32 %r394, %r391, %r392;\n"
"add.s32 %r395, %r394, %r83;\n"
"add.s32 %r396, %r395, -1;\n"
"add.s32 %r397, %r393, %r82;\n"
"add.s32 %r398, %r397, -2;\n"
"mad.lo.s32 %r399, %r84, %r396, %r398;\n"
"mul.wide.s32 %rd249, %r399, 4;\n"
"add.s64 %rd250, %rd40, %rd249;\n"
"ld.global.f32 %f56, [%rd250];\n"
"st.global.f32 [%rd438], %f56;\n"
"add.s64 %rd438, %rd438, 1024;\n"
"add.s32 %r686, %r686, 256;\n"
"setp.lt.s32\t%p46, %r686, %r80;\n"
"@%p46 bra BB0_37;\n"
"\n"
"BB0_38:\n"
"bar.sync 0;\n"
"ld.const.u32 %r87, [d_common+340];\n"
"setp.ge.s32\t%p47, %r1, %r87;\n"
"@%p47 bra BB0_41;\n"
"\n"
"ld.const.u64 %rd251, [%rd1+80];\n"
"cvta.to.global.u64 %rd252, %rd251;\n"
"ld.const.u64 %rd253, [%rd1+88];\n"
"cvta.to.global.u64 %rd254, %rd253;\n"
"mul.wide.s32 %rd255, %r1, 4;\n"
"add.s64 %rd440, %rd254, %rd255;\n"
"add.s64 %rd439, %rd252, %rd255;\n"
"mov.u32 %r685, %r1;\n"
"\n"
"BB0_40:\n"
"ld.global.f32 %f57, [%rd440];\n"
"ld.global.f32 %f58, [%rd439];\n"
"sub.f32 %f59, %f58, %f57;\n"
"st.global.f32 [%rd440], %f59;\n"
"add.s64 %rd440, %rd440, 1024;\n"
"add.s64 %rd439, %rd439, 1024;\n"
"add.s32 %r685, %r685, 256;\n"
"setp.lt.s32\t%p48, %r685, %r87;\n"
"@%p48 bra BB0_40;\n"
"\n"
"BB0_41:\n"
"bar.sync 0;\n"
"ld.const.u32 %r90, [d_common+332];\n"
"setp.ge.s32\t%p49, %r1, %r90;\n"
"@%p49 bra BB0_47;\n"
"\n"
"ld.const.u64 %rd256, [%rd1+88];\n"
"cvta.to.global.u64 %rd50, %rd256;\n"
"ld.const.u32 %r91, [d_common+340];\n"
"mov.u32 %r684, %r1;\n"
"\n"
"BB0_43:\n"
"mov.u32 %r656, %r684;\n"
"mov.u32 %r92, %r656;\n"
"setp.lt.s32\t%p50, %r91, 1;\n"
"@%p50 bra BB0_46;\n"
"\n"
"add.s32 %r93, %r91, %r92;\n"
"mov.f32 %f141, 0f00000000;\n"
"mov.u32 %r683, %r92;\n"
"\n"
"BB0_45:\n"
"mov.u32 %r94, %r683;\n"
"mul.wide.s32 %rd257, %r94, 4;\n"
"add.s64 %rd258, %rd50, %rd257;\n"
"ld.global.f32 %f61, [%rd258];\n"
"add.f32 %f141, %f141, %f61;\n"
"st.global.f32 [%rd258], %f141;\n"
"add.s32 %r95, %r90, %r94;\n"
"setp.lt.s32\t%p51, %r95, %r93;\n"
"mov.u32 %r683, %r95;\n"
"@%p51 bra BB0_45;\n"
"\n"
"BB0_46:\n"
"add.s32 %r684, %r92, 256;\n"
"setp.lt.s32\t%p52, %r684, %r90;\n"
"@%p52 bra BB0_43;\n"
"\n"
"BB0_47:\n"
"bar.sync 0;\n"
"ld.const.u32 %r97, [d_common+356];\n"
"setp.ge.s32\t%p53, %r1, %r97;\n"
"@%p53 bra BB0_50;\n"
"\n"
"ld.const.u64 %rd259, [%rd1+88];\n"
"cvta.to.global.u64 %rd51, %rd259;\n"
"ld.const.u64 %rd260, [%rd1+96];\n"
"cvta.to.global.u64 %rd261, %rd260;\n"
"ld.const.u32 %r98, [d_common+348];\n"
"ld.const.u32 %r99, [d_common+364];\n"
"ld.const.u32 %r100, [d_common+372];\n"
"ld.const.u32 %r101, [d_common+332];\n"
"mul.wide.s32 %rd262, %r1, 4;\n"
"add.s64 %rd441, %rd261, %rd262;\n"
"mov.u32 %r682, %r1;\n"
"\n"
"BB0_49:\n"
"add.s32 %r400, %r682, 1;\n"
"rem.s32 %r401, %r400, %r98;\n"
"div.s32 %r402, %r400, %r98;\n"
"setp.eq.s32\t%p54, %r401, 0;\n"
"selp.b32\t%r403, -1, 0, %p54;\n"
"selp.b32\t%r404, %r98, %r401, %p54;\n"
"add.s32 %r405, %r402, %r403;\n"
"add.s32 %r406, %r405, %r100;\n"
"add.s32 %r407, %r406, -1;\n"
"add.s32 %r408, %r404, %r99;\n"
"add.s32 %r409, %r408, -2;\n"
"mad.lo.s32 %r410, %r101, %r407, %r409;\n"
"mul.wide.s32 %rd263, %r410, 4;\n"
"add.s64 %rd264, %rd51, %rd263;\n"
"ld.global.f32 %f62, [%rd264];\n"
"st.global.f32 [%rd441], %f62;\n"
"add.s64 %rd441, %rd441, 1024;\n"
"add.s32 %r682, %r682, 256;\n"
"setp.lt.s32\t%p55, %r682, %r97;\n"
"@%p55 bra BB0_49;\n"
"\n"
"BB0_50:\n"
"bar.sync 0;\n"
"ld.const.u32 %r104, [d_common+404];\n"
"setp.ge.s32\t%p56, %r1, %r104;\n"
"@%p56 bra BB0_53;\n"
"\n"
"ld.const.u64 %rd265, [%rd1+88];\n"
"cvta.to.global.u64 %rd55, %rd265;\n"
"ld.const.u64 %rd266, [%rd1+104];\n"
"cvta.to.global.u64 %rd267, %rd266;\n"
"ld.const.u32 %r105, [d_common+396];\n"
"ld.const.u32 %r106, [d_common+380];\n"
"ld.const.u32 %r107, [d_common+388];\n"
"ld.const.u32 %r108, [d_common+332];\n"
"mul.wide.s32 %rd268, %r1, 4;\n"
"add.s64 %rd442, %rd267, %rd268;\n"
"mov.u32 %r681, %r1;\n"
"\n"
"BB0_52:\n"
"add.s32 %r411, %r681, 1;\n"
"rem.s32 %r412, %r411, %r105;\n"
"div.s32 %r413, %r411, %r105;\n"
"setp.eq.s32\t%p57, %r412, 0;\n"
"selp.b32\t%r414, -1, 0, %p57;\n"
"selp.b32\t%r415, %r105, %r412, %p57;\n"
"add.s32 %r416, %r413, %r414;\n"
"add.s32 %r417, %r416, %r107;\n"
"add.s32 %r418, %r417, -1;\n"
"add.s32 %r419, %r415, %r106;\n"
"add.s32 %r420, %r419, -2;\n"
"mad.lo.s32 %r421, %r108, %r418, %r420;\n"
"mul.wide.s32 %rd269, %r421, 4;\n"
"add.s64 %rd270, %rd55, %rd269;\n"
"ld.global.f32 %f63, [%rd270];\n"
"st.global.f32 [%rd442], %f63;\n"
"add.s64 %rd442, %rd442, 1024;\n"
"add.s32 %r681, %r681, 256;\n"
"setp.lt.s32\t%p58, %r681, %r104;\n"
"@%p58 bra BB0_52;\n"
"\n"
"BB0_53:\n"
"bar.sync 0;\n"
"ld.const.u32 %r111, [d_common+404];\n"
"setp.ge.s32\t%p59, %r1, %r111;\n"
"@%p59 bra BB0_56;\n"
"\n"
"ld.const.u64 %rd271, [%rd1+96];\n"
"cvta.to.global.u64 %rd272, %rd271;\n"
"ld.const.u64 %rd273, [%rd1+104];\n"
"cvta.to.global.u64 %rd274, %rd273;\n"
"mul.wide.s32 %rd275, %r1, 4;\n"
"add.s64 %rd444, %rd274, %rd275;\n"
"add.s64 %rd443, %rd272, %rd275;\n"
"mov.u32 %r680, %r1;\n"
"\n"
"BB0_55:\n"
"ld.global.f32 %f64, [%rd444];\n"
"ld.global.f32 %f65, [%rd443];\n"
"sub.f32 %f66, %f65, %f64;\n"
"st.global.f32 [%rd444], %f66;\n"
"add.s64 %rd444, %rd444, 1024;\n"
"add.s64 %rd443, %rd443, 1024;\n"
"add.s32 %r680, %r680, 256;\n"
"setp.lt.s32\t%p60, %r680, %r111;\n"
"@%p60 bra BB0_55;\n"
"\n"
"BB0_56:\n"
"bar.sync 0;\n"
"ld.const.u32 %r114, [d_common+420];\n"
"setp.ge.s32\t%p61, %r1, %r114;\n"
"@%p61 bra BB0_59;\n"
"\n"
"ld.const.u64 %rd276, [%rd1+48];\n"
"cvta.to.global.u64 %rd277, %rd276;\n"
"ld.const.u64 %rd278, [%rd1+112];\n"
"cvta.to.global.u64 %rd279, %rd278;\n"
"mul.wide.s32 %rd280, %r1, 4;\n"
"add.s64 %rd446, %rd279, %rd280;\n"
"add.s64 %rd445, %rd277, %rd280;\n"
"mov.u32 %r679, %r1;\n"
"\n"
"BB0_58:\n"
"ld.global.f32 %f67, [%rd445];\n"
"mul.f32 %f68, %f67, %f67;\n"
"st.global.f32 [%rd446], %f68;\n"
"add.s64 %rd446, %rd446, 1024;\n"
"add.s64 %rd445, %rd445, 1024;\n"
"add.s32 %r679, %r679, 256;\n"
"setp.lt.s32\t%p62, %r679, %r114;\n"
"@%p62 bra BB0_58;\n"
"\n"
"BB0_59:\n"
"bar.sync 0;\n"
"ld.const.u32 %r117, [d_common+276];\n"
"setp.ge.s32\t%p63, %r1, %r117;\n"
"@%p63 bra BB0_64;\n"
"\n"
"ld.const.u64 %rd281, [%rd1+112];\n"
"cvta.to.global.u64 %rd71, %rd281;\n"
"ld.const.u64 %rd282, [%rd1+72];\n"
"cvta.to.global.u64 %rd283, %rd282;\n"
"ld.const.u32 %r118, [d_common+268];\n"
"ld.const.u32 %r119, [d_common+412];\n"
"ld.const.u32 %r120, [d_common+260];\n"
"add.s32 %r121, %r119, %r120;\n"
"ld.const.u64 %rd284, [d_common+264];\n"
"cvt.u32.u64\t%r122, %rd284;\n"
"ld.const.u32 %r422, [d_common+416];\n"
"add.s32 %r123, %r422, %r122;\n"
"shr.u64 %rd285, %rd284, 32;\n"
"cvt.u32.u64\t%r124, %rd285;\n"
"mul.wide.s32 %rd286, %r1, 4;\n"
"add.s64 %rd447, %rd283, %rd286;\n"
"mov.u32 %r586, %r118;\n"
"mov.u32 %r678, %r1;\n"
"\n"
"BB0_61:\n"
"mov.u32 %r125, %r586;\n"
"add.s32 %r423, %r678, 1;\n"
"rem.s32 %r424, %r423, %r125;\n"
"div.s32 %r425, %r423, %r125;\n"
"setp.eq.s32\t%p64, %r424, 0;\n"
"selp.b32\t%r426, -1, 0, %p64;\n"
"add.s32 %r127, %r426, %r425;\n"
"selp.b32\t%r128, %r125, %r424, %p64;\n"
"setp.gt.s32\t%p65, %r128, %r120;\n"
"setp.le.s32\t%p66, %r128, %r121;\n"
"and.pred %p67, %p65, %p66;\n"
"add.s32 %r427, %r122, -1;\n"
"setp.gt.s32\t%p68, %r127, %r427;\n"
"and.pred %p69, %p67, %p68;\n"
"setp.lt.s32\t%p70, %r127, %r123;\n"
"and.pred %p71, %p69, %p70;\n"
"mov.f32 %f142, 0f00000000;\n"
"@!%p71 bra BB0_63;\n"
"bra.uni BB0_62;\n"
"\n"
"BB0_62:\n"
"add.s32 %r428, %r128, -1;\n"
"sub.s32 %r429, %r428, %r120;\n"
"sub.s32 %r430, %r127, %r122;\n"
"mad.lo.s32 %r431, %r119, %r430, %r429;\n"
"mul.wide.s32 %rd287, %r431, 4;\n"
"add.s64 %rd288, %rd71, %rd287;\n"
"ld.global.f32 %f142, [%rd288];\n"
"\n"
"BB0_63:\n"
"st.global.f32 [%rd447], %f142;\n"
"add.s64 %rd447, %rd447, 1024;\n"
"add.s32 %r678, %r678, 256;\n"
"setp.lt.s32\t%p72, %r678, %r117;\n"
"mov.u32 %r586, %r124;\n"
"@%p72 bra BB0_61;\n"
"\n"
"BB0_64:\n"
"bar.sync 0;\n"
"ld.const.u32 %r130, [d_common+272];\n"
"setp.ge.s32\t%p73, %r1, %r130;\n"
"@%p73 bra BB0_70;\n"
"\n"
"ld.const.u64 %rd289, [%rd1+72];\n"
"cvta.to.global.u64 %rd75, %rd289;\n"
"ld.const.u32 %r131, [d_common+268];\n"
"shl.b32 %r132, %r131, 8;\n"
"mul.lo.s32 %r133, %r1, %r131;\n"
"mov.u32 %r587, 0;\n"
"mov.u32 %r677, %r1;\n"
"\n"
"BB0_66:\n"
"mul.lo.s32 %r588, %r131, %r677;\n"
"setp.lt.s32\t%p74, %r131, 1;\n"
"@%p74 bra BB0_69;\n"
"\n"
"mad.lo.s32 %r433, %r132, %r587, %r133;\n"
"mul.wide.s32 %rd290, %r433, 4;\n"
"add.s64 %rd448, %rd75, %rd290;\n"
"add.s32 %r137, %r131, %r588;\n"
"mov.f32 %f143, 0f00000000;\n"
"\n"
"BB0_68:\n"
"ld.global.f32 %f71, [%rd448];\n"
"add.f32 %f143, %f143, %f71;\n"
"st.global.f32 [%rd448], %f143;\n"
"add.s64 %rd448, %rd448, 4;\n"
"add.s32 %r588, %r588, 1;\n"
"setp.lt.s32\t%p75, %r588, %r137;\n"
"@%p75 bra BB0_68;\n"
"\n"
"BB0_69:\n"
"add.s32 %r677, %r677, 256;\n"
"setp.lt.s32\t%p76, %r677, %r130;\n"
"add.s32 %r587, %r587, 1;\n"
"@%p76 bra BB0_66;\n"
"\n"
"BB0_70:\n"
"bar.sync 0;\n"
"ld.const.u32 %r142, [d_common+292];\n"
"setp.ge.s32\t%p77, %r1, %r142;\n"
"@%p77 bra BB0_73;\n"
"\n"
"ld.const.u64 %rd291, [%rd1+72];\n"
"cvta.to.global.u64 %rd79, %rd291;\n"
"ld.const.u64 %rd292, [%rd1+80];\n"
"cvta.to.global.u64 %rd293, %rd292;\n"
"ld.const.u32 %r143, [d_common+284];\n"
"ld.const.u32 %r144, [d_common+300];\n"
"ld.const.u32 %r145, [d_common+308];\n"
"ld.const.u32 %r146, [d_common+268];\n"
"mul.wide.s32 %rd294, %r1, 4;\n"
"add.s64 %rd449, %rd293, %rd294;\n"
"mov.u32 %r676, %r1;\n"
"\n"
"BB0_72:\n"
"add.s32 %r434, %r676, 1;\n"
"rem.s32 %r435, %r434, %r143;\n"
"div.s32 %r436, %r434, %r143;\n"
"setp.eq.s32\t%p78, %r435, 0;\n"
"selp.b32\t%r437, -1, 0, %p78;\n"
"selp.b32\t%r438, %r143, %r435, %p78;\n"
"add.s32 %r439, %r436, %r437;\n"
"add.s32 %r440, %r439, %r145;\n"
"add.s32 %r441, %r440, -1;\n"
"add.s32 %r442, %r438, %r144;\n"
"add.s32 %r443, %r442, -2;\n"
"mad.lo.s32 %r444, %r146, %r441, %r443;\n"
"mul.wide.s32 %rd295, %r444, 4;\n"
"add.s64 %rd296, %rd79, %rd295;\n"
"ld.global.f32 %f72, [%rd296];\n"
"st.global.f32 [%rd449], %f72;\n"
"add.s64 %rd449, %rd449, 1024;\n"
"add.s32 %r676, %r676, 256;\n"
"setp.lt.s32\t%p79, %r676, %r142;\n"
"@%p79 bra BB0_72;\n"
"\n"
"BB0_73:\n"
"bar.sync 0;\n"
"ld.const.u32 %r149, [d_common+340];\n"
"setp.ge.s32\t%p80, %r1, %r149;\n"
"@%p80 bra BB0_76;\n"
"\n"
"ld.const.u64 %rd297, [%rd1+72];\n"
"cvta.to.global.u64 %rd83, %rd297;\n"
"ld.const.u64 %rd298, [%rd1+88];\n"
"cvta.to.global.u64 %rd299, %rd298;\n"
"ld.const.u32 %r150, [d_common+332];\n"
"ld.const.u32 %r151, [d_common+316];\n"
"ld.const.u32 %r152, [d_common+324];\n"
"ld.const.u32 %r153, [d_common+268];\n"
"mul.wide.s32 %rd300, %r1, 4;\n"
"add.s64 %rd450, %rd299, %rd300;\n"
"mov.u32 %r675, %r1;\n"
"\n"
"BB0_75:\n"
"add.s32 %r445, %r675, 1;\n"
"rem.s32 %r446, %r445, %r150;\n"
"div.s32 %r447, %r445, %r150;\n"
"setp.eq.s32\t%p81, %r446, 0;\n"
"selp.b32\t%r448, -1, 0, %p81;\n"
"selp.b32\t%r449, %r150, %r446, %p81;\n"
"add.s32 %r450, %r447, %r448;\n"
"add.s32 %r451, %r450, %r152;\n"
"add.s32 %r452, %r451, -1;\n"
"add.s32 %r453, %r449, %r151;\n"
"add.s32 %r454, %r453, -2;\n"
"mad.lo.s32 %r455, %r153, %r452, %r454;\n"
"mul.wide.s32 %rd301, %r455, 4;\n"
"add.s64 %rd302, %rd83, %rd301;\n"
"ld.global.f32 %f73, [%rd302];\n"
"st.global.f32 [%rd450], %f73;\n"
"add.s64 %rd450, %rd450, 1024;\n"
"add.s32 %r675, %r675, 256;\n"
"setp.lt.s32\t%p82, %r675, %r149;\n"
"@%p82 bra BB0_75;\n"
"\n"
"BB0_76:\n"
"bar.sync 0;\n"
"ld.const.u32 %r156, [d_common+340];\n"
"setp.ge.s32\t%p83, %r1, %r156;\n"
"@%p83 bra BB0_79;\n"
"\n"
"ld.const.u64 %rd303, [%rd1+80];\n"
"cvta.to.global.u64 %rd304, %rd303;\n"
"ld.const.u64 %rd305, [%rd1+88];\n"
"cvta.to.global.u64 %rd306, %rd305;\n"
"mul.wide.s32 %rd307, %r1, 4;\n"
"add.s64 %rd452, %rd306, %rd307;\n"
"add.s64 %rd451, %rd304, %rd307;\n"
"mov.u32 %r674, %r1;\n"
"\n"
"BB0_78:\n"
"ld.global.f32 %f74, [%rd452];\n"
"ld.global.f32 %f75, [%rd451];\n"
"sub.f32 %f76, %f75, %f74;\n"
"st.global.f32 [%rd452], %f76;\n"
"add.s64 %rd452, %rd452, 1024;\n"
"add.s64 %rd451, %rd451, 1024;\n"
"add.s32 %r674, %r674, 256;\n"
"setp.lt.s32\t%p84, %r674, %r156;\n"
"@%p84 bra BB0_78;\n"
"\n"
"BB0_79:\n"
"ld.const.u32 %r159, [d_common+332];\n"
"setp.ge.s32\t%p85, %r1, %r159;\n"
"@%p85 bra BB0_85;\n"
"\n"
"ld.const.u64 %rd308, [%rd1+88];\n"
"cvta.to.global.u64 %rd93, %rd308;\n"
"mov.u32 %r673, %r1;\n"
"\n"
"BB0_81:\n"
"mov.u32 %r657, %r673;\n"
"mov.u32 %r160, %r657;\n"
"setp.lt.s32\t%p86, %r156, 1;\n"
"@%p86 bra BB0_84;\n"
"\n"
"add.s32 %r161, %r156, %r160;\n"
"mov.f32 %f144, 0f00000000;\n"
"mov.u32 %r672, %r160;\n"
"\n"
"BB0_83:\n"
"mov.u32 %r162, %r672;\n"
"mul.wide.s32 %rd309, %r162, 4;\n"
"add.s64 %rd310, %rd93, %rd309;\n"
"ld.global.f32 %f78, [%rd310];\n"
"add.f32 %f144, %f144, %f78;\n"
"st.global.f32 [%rd310], %f144;\n"
"add.s32 %r163, %r159, %r162;\n"
"setp.lt.s32\t%p87, %r163, %r161;\n"
"mov.u32 %r672, %r163;\n"
"@%p87 bra BB0_83;\n"
"\n"
"BB0_84:\n"
"add.s32 %r673, %r160, 256;\n"
"setp.lt.s32\t%p88, %r673, %r159;\n"
"@%p88 bra BB0_81;\n"
"\n"
"BB0_85:\n"
"bar.sync 0;\n"
"ld.const.u32 %r165, [d_common+356];\n"
"setp.ge.s32\t%p89, %r1, %r165;\n"
"@%p89 bra BB0_88;\n"
"\n"
"ld.const.u64 %rd311, [%rd1+88];\n"
"cvta.to.global.u64 %rd94, %rd311;\n"
"ld.const.u64 %rd312, [%rd1+96];\n"
"cvta.to.global.u64 %rd313, %rd312;\n"
"ld.const.u32 %r166, [d_common+348];\n"
"ld.const.u32 %r167, [d_common+364];\n"
"ld.const.u32 %r168, [d_common+372];\n"
"ld.const.u32 %r169, [d_common+332];\n"
"mul.wide.s32 %rd314, %r1, 4;\n"
"add.s64 %rd453, %rd313, %rd314;\n"
"mov.u32 %r671, %r1;\n"
"\n"
"BB0_87:\n"
"add.s32 %r456, %r671, 1;\n"
"rem.s32 %r457, %r456, %r166;\n"
"div.s32 %r458, %r456, %r166;\n"
"setp.eq.s32\t%p90, %r457, 0;\n"
"selp.b32\t%r459, -1, 0, %p90;\n"
"selp.b32\t%r460, %r166, %r457, %p90;\n"
"add.s32 %r461, %r458, %r459;\n"
"add.s32 %r462, %r461, %r168;\n"
"add.s32 %r463, %r462, -1;\n"
"add.s32 %r464, %r460, %r167;\n"
"add.s32 %r465, %r464, -2;\n"
"mad.lo.s32 %r466, %r169, %r463, %r465;\n"
"mul.wide.s32 %rd315, %r466, 4;\n"
"add.s64 %rd316, %rd94, %rd315;\n"
"ld.global.f32 %f79, [%rd316];\n"
"st.global.f32 [%rd453], %f79;\n"
"add.s64 %rd453, %rd453, 1024;\n"
"add.s32 %r671, %r671, 256;\n"
"setp.lt.s32\t%p91, %r671, %r165;\n"
"@%p91 bra BB0_87;\n"
"\n"
"BB0_88:\n"
"bar.sync 0;\n"
"ld.const.u32 %r172, [d_common+404];\n"
"setp.ge.s32\t%p92, %r1, %r172;\n"
"@%p92 bra BB0_91;\n"
"\n"
"ld.const.u64 %rd317, [%rd1+88];\n"
"cvta.to.global.u64 %rd98, %rd317;\n"
"ld.const.u64 %rd318, [%rd1+120];\n"
"cvta.to.global.u64 %rd319, %rd318;\n"
"ld.const.u32 %r173, [d_common+396];\n"
"ld.const.u32 %r174, [d_common+380];\n"
"ld.const.u32 %r175, [d_common+388];\n"
"ld.const.u32 %r176, [d_common+332];\n"
"mul.wide.s32 %rd320, %r1, 4;\n"
"add.s64 %rd454, %rd319, %rd320;\n"
"mov.u32 %r670, %r1;\n"
"\n"
"BB0_90:\n"
"add.s32 %r467, %r670, 1;\n"
"rem.s32 %r468, %r467, %r173;\n"
"div.s32 %r469, %r467, %r173;\n"
"setp.eq.s32\t%p93, %r468, 0;\n"
"selp.b32\t%r470, -1, 0, %p93;\n"
"selp.b32\t%r471, %r173, %r468, %p93;\n"
"add.s32 %r472, %r469, %r470;\n"
"add.s32 %r473, %r472, %r175;\n"
"add.s32 %r474, %r473, -1;\n"
"add.s32 %r475, %r471, %r174;\n"
"add.s32 %r476, %r475, -2;\n"
"mad.lo.s32 %r477, %r176, %r474, %r476;\n"
"mul.wide.s32 %rd321, %r477, 4;\n"
"add.s64 %rd322, %rd98, %rd321;\n"
"ld.global.f32 %f80, [%rd322];\n"
"st.global.f32 [%rd454], %f80;\n"
"add.s64 %rd454, %rd454, 1024;\n"
"add.s32 %r670, %r670, 256;\n"
"setp.lt.s32\t%p94, %r670, %r172;\n"
"@%p94 bra BB0_90;\n"
"\n"
"BB0_91:\n"
"bar.sync 0;\n"
"ld.const.u32 %r179, [d_common+404];\n"
"setp.ge.s32\t%p95, %r1, %r179;\n"
"@%p95 bra BB0_94;\n"
"\n"
"ld.const.u64 %rd323, [%rd1+96];\n"
"cvta.to.global.u64 %rd324, %rd323;\n"
"ld.const.u64 %rd325, [%rd1+120];\n"
"cvta.to.global.u64 %rd326, %rd325;\n"
"mul.wide.s32 %rd327, %r1, 4;\n"
"add.s64 %rd456, %rd326, %rd327;\n"
"add.s64 %rd455, %rd324, %rd327;\n"
"mov.u32 %r669, %r1;\n"
"\n"
"BB0_93:\n"
"ld.global.f32 %f81, [%rd456];\n"
"ld.global.f32 %f82, [%rd455];\n"
"sub.f32 %f83, %f82, %f81;\n"
"st.global.f32 [%rd456], %f83;\n"
"add.s64 %rd456, %rd456, 1024;\n"
"add.s64 %rd455, %rd455, 1024;\n"
"add.s32 %r669, %r669, 256;\n"
"setp.lt.s32\t%p96, %r669, %r179;\n"
"@%p96 bra BB0_93;\n"
"\n"
"BB0_94:\n"
"bar.sync 0;\n"
"ld.const.u32 %r182, [d_common+404];\n"
"setp.ge.s32\t%p97, %r1, %r182;\n"
"@%p97 bra BB0_97;\n"
"\n"
"ld.const.u64 %rd328, [%rd1+104];\n"
"cvta.to.global.u64 %rd329, %rd328;\n"
"ld.const.u64 %rd330, [%rd1+120];\n"
"cvta.to.global.u64 %rd331, %rd330;\n"
"ld.const.u32 %r478, [d_common+212];\n"
"cvt.rn.f32.s32\t%f18, %r478;\n"
"mul.wide.s32 %rd332, %r1, 4;\n"
"add.s64 %rd458, %rd331, %rd332;\n"
"add.s64 %rd457, %rd329, %rd332;\n"
"mov.u32 %r668, %r1;\n"
"\n"
"BB0_96:\n"
"ld.global.f32 %f84, [%rd457];\n"
"mul.f32 %f85, %f84, %f84;\n"
"div.rn.f32 %f86, %f85, %f18;\n"
"ld.global.f32 %f87, [%rd458];\n"
"sub.f32 %f88, %f87, %f86;\n"
"setp.lt.f32\t%p98, %f88, 0f00000000;\n"
"selp.f32\t%f89, 0f00000000, %f88, %p98;\n"
"sqrt.rn.f32 %f90, %f89;\n"
"st.global.f32 [%rd458], %f90;\n"
"add.s64 %rd458, %rd458, 1024;\n"
"add.s64 %rd457, %rd457, 1024;\n"
"add.s32 %r668, %r668, 256;\n"
"setp.lt.s32\t%p99, %r668, %r182;\n"
"@%p99 bra BB0_96;\n"
"\n"
"BB0_97:\n"
"bar.sync 0;\n"
"ld.const.u32 %r185, [d_common+452];\n"
"setp.ge.s32\t%p100, %r1, %r185;\n"
"@%p100 bra BB0_100;\n"
"\n"
"ld.const.u64 %rd333, [%rd1+128];\n"
"cvta.to.global.u64 %rd334, %rd333;\n"
"cvt.s64.s32\t%rd335, %r1;\n"
"mul.wide.s32 %rd336, %r1, 4;\n"
"add.s64 %rd460, %rd334, %rd336;\n"
"add.s64 %rd338, %rd335, %rd16;\n"
"shl.b64 %rd339, %rd338, 2;\n"
"add.s64 %rd459, %rd15, %rd339;\n"
"mov.u32 %r667, %r1;\n"
"\n"
"BB0_99:\n"
"ld.global.f32 %f91, [%rd459];\n"
"mul.f32 %f92, %f91, %f91;\n"
"st.global.f32 [%rd460], %f92;\n"
"add.s64 %rd460, %rd460, 1024;\n"
"add.s64 %rd459, %rd459, 1024;\n"
"add.s32 %r667, %r667, 256;\n"
"setp.lt.s32\t%p101, %r667, %r185;\n"
"@%p101 bra BB0_99;\n"
"\n"
"BB0_100:\n"
"bar.sync 0;\n"
"ld.const.u32 %r188, [d_common+208];\n"
"setp.ge.s32\t%p102, %r1, %r188;\n"
"@%p102 bra BB0_105;\n"
"\n"
"ld.const.u32 %r189, [d_common+204];\n"
"mul.wide.s32 %rd340, %r16, 4;\n"
"add.s64 %rd120, %rd15, %rd340;\n"
"shl.b32 %r190, %r189, 8;\n"
"mul.lo.s32 %r191, %r1, %r189;\n"
"mov.u32 %r479, 0;\n"
"mov.u32 %r591, %r479;\n"
"mov.u32 %r666, %r1;\n"
"\n"
"BB0_102:\n"
"mad.lo.s32 %r481, %r190, %r591, %r191;\n"
"mul.wide.s32 %rd341, %r481, 4;\n"
"add.s64 %rd461, %rd120, %rd341;\n"
"mov.f32 %f146, 0f00000000;\n"
"mov.f32 %f147, %f146;\n"
"setp.lt.s32\t%p103, %r189, 1;\n"
"mov.u32 %r590, %r479;\n"
"@%p103 bra BB0_104;\n"
"\n"
"BB0_103:\n"
"mov.u32 %r194, %r590;\n"
"ld.global.f32 %f95, [%rd461];\n"
"add.f32 %f147, %f147, %f95;\n"
"add.s64 %rd461, %rd461, 4;\n"
"add.s32 %r195, %r194, 1;\n"
"setp.lt.s32\t%p104, %r195, %r189;\n"
"mov.u32 %r590, %r195;\n"
"mov.f32 %f146, %f147;\n"
"@%p104 bra BB0_103;\n"
"\n"
"BB0_104:\n"
"mul.wide.s32 %rd342, %r666, 4;\n"
"mov.u64 %rd343, _Z6kernelv$__cuda_local_var_47816_32_non_const_in_partial_sum;\n"
"add.s64 %rd344, %rd343, %rd342;\n"
"st.shared.f32 [%rd344], %f146;\n"
"add.s32 %r666, %r666, 256;\n"
"setp.lt.s32\t%p105, %r666, %r188;\n"
"add.s32 %r591, %r591, 1;\n"
"@%p105 bra BB0_102;\n"
"\n"
"BB0_105:\n"
"shl.b64 %rd345, %rd16, 2;\n"
"add.s64 %rd474, %rd15, %rd345;\n"
"bar.sync 0;\n"
"ld.const.u32 %r198, [d_common+444];\n"
"setp.ge.s32\t%p106, %r1, %r198;\n"
"@%p106 bra BB0_110;\n"
"\n"
"ld.const.u64 %rd346, [%rd1+128];\n"
"cvta.to.global.u64 %rd125, %rd346;\n"
"ld.const.u32 %r199, [d_common+448];\n"
"mov.u32 %r665, %r1;\n"
"\n"
"BB0_107:\n"
"mov.f32 %f149, 0f00000000;\n"
"mov.f32 %f150, %f149;\n"
"mov.u32 %r592, 0;\n"
"setp.lt.s32\t%p107, %r199, 1;\n"
"@%p107 bra BB0_109;\n"
"\n"
"BB0_108:\n"
"mad.lo.s32 %r483, %r198, %r592, %r665;\n"
"mul.wide.s32 %rd347, %r483, 4;\n"
"add.s64 %rd348, %rd125, %rd347;\n"
"ld.global.f32 %f98, [%rd348];\n"
"add.f32 %f150, %f150, %f98;\n"
"add.s32 %r592, %r592, 1;\n"
"setp.lt.s32\t%p108, %r592, %r199;\n"
"mov.f32 %f149, %f150;\n"
"@%p108 bra BB0_108;\n"
"\n"
"BB0_109:\n"
"mul.wide.s32 %rd349, %r665, 4;\n"
"mov.u64 %rd350, _Z6kernelv$__cuda_local_var_47817_32_non_const_in_sqr_partial_sum;\n"
"add.s64 %rd351, %rd350, %rd349;\n"
"st.shared.f32 [%rd351], %f149;\n"
"add.s32 %r665, %r665, 256;\n"
"setp.lt.s32\t%p109, %r665, %r198;\n"
"@%p109 bra BB0_107;\n"
"\n"
"BB0_110:\n"
"bar.sync 0;\n"
"setp.eq.s32\t%p110, %r1, 0;\n"
"@%p110 bra BB0_115;\n"
"\n"
"setp.ne.s32\t%p111, %r1, 1;\n"
"@%p111 bra BB0_118;\n"
"\n"
"mov.u32 %r593, 0;\n"
"st.shared.u32 [_Z6kernelv$__cuda_local_var_47819_32_non_const_in_sqr_final_sum], %r593;\n"
"ld.const.u32 %r204, [d_common+448];\n"
"mov.f32 %f151, 0f00000000;\n"
"mov.u64 %rd462, _Z6kernelv$__cuda_local_var_47817_32_non_const_in_sqr_partial_sum;\n"
"setp.lt.s32\t%p112, %r204, 1;\n"
"@%p112 bra BB0_118;\n"
"\n"
"BB0_113:\n"
"ld.shared.f32 %f100, [%rd462];\n"
"add.f32 %f151, %f151, %f100;\n"
"add.s64 %rd462, %rd462, 4;\n"
"add.s32 %r593, %r593, 1;\n"
"setp.lt.s32\t%p113, %r593, %r204;\n"
"@%p113 bra BB0_113;\n"
"\n"
"st.shared.f32 [_Z6kernelv$__cuda_local_var_47819_32_non_const_in_sqr_final_sum], %f151;\n"
"bra.uni BB0_118;\n"
"\n"
"BB0_115:\n"
"mov.u32 %r594, 0;\n"
"st.shared.u32 [_Z6kernelv$__cuda_local_var_47818_32_non_const_in_final_sum], %r594;\n"
"ld.const.u32 %r207, [d_common+208];\n"
"mov.f32 %f152, 0f00000000;\n"
"mov.u64 %rd463, _Z6kernelv$__cuda_local_var_47816_32_non_const_in_partial_sum;\n"
"setp.lt.s32\t%p114, %r207, 1;\n"
"@%p114 bra BB0_118;\n"
"\n"
"BB0_116:\n"
"ld.shared.f32 %f102, [%rd463];\n"
"add.f32 %f152, %f152, %f102;\n"
"add.s64 %rd463, %rd463, 4;\n"
"add.s32 %r594, %r594, 1;\n"
"setp.lt.s32\t%p115, %r594, %r207;\n"
"@%p115 bra BB0_116;\n"
"\n"
"st.shared.f32 [_Z6kernelv$__cuda_local_var_47818_32_non_const_in_final_sum], %f152;\n"
"\n"
"BB0_118:\n"
"bar.sync 0;\n"
"@!%p110 bra BB0_120;\n"
"bra.uni BB0_119;\n"
"\n"
"BB0_119:\n"
"ld.shared.f32 %f103, [_Z6kernelv$__cuda_local_var_47818_32_non_const_in_final_sum];\n"
"ld.const.u32 %r486, [d_common+212];\n"
"cvt.rn.f32.s32\t%f104, %r486;\n"
"div.rn.f32 %f105, %f103, %f104;\n"
"mul.f32 %f106, %f105, %f105;\n"
"ld.shared.f32 %f107, [_Z6kernelv$__cuda_local_var_47819_32_non_const_in_sqr_final_sum];\n"
"div.rn.f32 %f108, %f107, %f104;\n"
"sub.f32 %f109, %f108, %f106;\n"
"sqrt.rn.f32 %f110, %f109;\n"
"add.s32 %r487, %r486, -1;\n"
"cvt.rn.f32.s32\t%f111, %r487;\n"
"sqrt.rn.f32 %f112, %f111;\n"
"mul.f32 %f113, %f110, %f112;\n"
"st.shared.f32 [_Z6kernelv$__cuda_local_var_47824_32_non_const_denomT], %f113;\n"
"\n"
"BB0_120:\n"
"bar.sync 0;\n"
"ld.const.u32 %r210, [d_common+404];\n"
"setp.ge.s32\t%p116, %r1, %r210;\n"
"@%p116 bra BB0_123;\n"
"\n"
"ld.const.u64 %rd354, [%rd1+120];\n"
"cvta.to.global.u64 %rd355, %rd354;\n"
"ld.shared.f32 %f29, [_Z6kernelv$__cuda_local_var_47824_32_non_const_denomT];\n"
"mul.wide.s32 %rd356, %r1, 4;\n"
"add.s64 %rd464, %rd355, %rd356;\n"
"mov.u32 %r664, %r1;\n"
"\n"
"BB0_122:\n"
"ld.global.f32 %f114, [%rd464];\n"
"mul.f32 %f115, %f114, %f29;\n"
"st.global.f32 [%rd464], %f115;\n"
"add.s64 %rd464, %rd464, 1024;\n"
"add.s32 %r664, %r664, 256;\n"
"setp.lt.s32\t%p117, %r664, %r210;\n"
"@%p117 bra BB0_122;\n"
"\n"
"BB0_123:\n"
"bar.sync 0;\n"
"ld.const.u32 %r213, [d_common+244];\n"
"setp.ge.s32\t%p118, %r1, %r213;\n"
"@%p118 bra BB0_126;\n"
"\n"
"ld.const.u64 %rd357, [%rd1+56];\n"
"cvta.to.global.u64 %rd358, %rd357;\n"
"ld.const.u64 %rd359, [%rd1+104];\n"
"cvta.to.global.u64 %rd360, %rd359;\n"
"ld.shared.f32 %f30, [_Z6kernelv$__cuda_local_var_47818_32_non_const_in_final_sum];\n"
"ld.const.u32 %r488, [d_common+212];\n"
"cvt.rn.f32.s32\t%f31, %r488;\n"
"mul.wide.s32 %rd361, %r1, 4;\n"
"add.s64 %rd466, %rd360, %rd361;\n"
"add.s64 %rd465, %rd358, %rd361;\n"
"mov.u32 %r663, %r1;\n"
"\n"
"BB0_125:\n"
"ld.global.f32 %f116, [%rd466];\n"
"mul.f32 %f117, %f116, %f30;\n"
"div.rn.f32 %f118, %f117, %f31;\n"
"ld.global.f32 %f119, [%rd465];\n"
"sub.f32 %f120, %f119, %f118;\n"
"st.global.f32 [%rd465], %f120;\n"
"add.s64 %rd466, %rd466, 1024;\n"
"add.s64 %rd465, %rd465, 1024;\n"
"add.s32 %r663, %r663, 256;\n"
"setp.lt.s32\t%p119, %r663, %r213;\n"
"@%p119 bra BB0_125;\n"
"\n"
"BB0_126:\n"
"bar.sync 0;\n"
"ld.const.u32 %r216, [d_common+404];\n"
"setp.ge.s32\t%p120, %r1, %r216;\n"
"@%p120 bra BB0_129;\n"
"\n"
"ld.const.u64 %rd362, [%rd1+56];\n"
"cvta.to.global.u64 %rd363, %rd362;\n"
"ld.const.u64 %rd364, [%rd1+120];\n"
"cvta.to.global.u64 %rd365, %rd364;\n"
"mul.wide.s32 %rd366, %r1, 4;\n"
"add.s64 %rd468, %rd365, %rd366;\n"
"add.s64 %rd467, %rd363, %rd366;\n"
"mov.u32 %r662, %r1;\n"
"\n"
"BB0_128:\n"
"ld.global.f32 %f121, [%rd468];\n"
"ld.global.f32 %f122, [%rd467];\n"
"div.rn.f32 %f123, %f122, %f121;\n"
"st.global.f32 [%rd468], %f123;\n"
"add.s64 %rd468, %rd468, 1024;\n"
"add.s64 %rd467, %rd467, 1024;\n"
"add.s32 %r662, %r662, 256;\n"
"setp.lt.s32\t%p121, %r662, %r216;\n"
"@%p121 bra BB0_128;\n"
"\n"
"BB0_129:\n"
"bar.sync 0;\n"
"ld.const.v2.u32 {%r489, %r490}, [d_common];\n"
"add.s32 %r493, %r489, %r490;\n"
"add.s32 %r597, %r493, 1;\n"
"ld.const.u32 %r220, [d_common_change+8];\n"
"setp.eq.s32\t%p122, %r220, 0;\n"
"mov.u32 %r596, %r597;\n"
"@%p122 bra BB0_131;\n"
"\n"
"ld.const.u32 %r494, [d_common+16];\n"
"ld.const.u32 %r495, [%rd1+40];\n"
"mad.lo.s32 %r496, %r494, %r495, %r220;\n"
"add.s32 %r497, %r496, -1;\n"
"ld.const.u64 %rd367, [%rd1+16];\n"
"cvta.to.global.u64 %rd368, %rd367;\n"
"mul.wide.s32 %rd369, %r497, 4;\n"
"add.s64 %rd370, %rd368, %rd369;\n"
"ld.global.u32 %r498, [%rd370];\n"
"add.s32 %r499, %r498, %r597;\n"
"ld.const.u64 %rd371, [%rd1];\n"
"cvta.to.global.u64 %rd372, %rd371;\n"
"mul.wide.s32 %rd373, %r495, 4;\n"
"add.s64 %rd374, %rd372, %rd373;\n"
"ld.global.u32 %r500, [%rd374];\n"
"sub.s32 %r596, %r499, %r500;\n"
"ld.const.u64 %rd375, [%rd1+24];\n"
"cvta.to.global.u64 %rd376, %rd375;\n"
"add.s64 %rd377, %rd376, %rd369;\n"
"ld.global.u32 %r501, [%rd377];\n"
"add.s32 %r502, %r501, %r597;\n"
"ld.const.u64 %rd378, [%rd1+8];\n"
"cvta.to.global.u64 %rd379, %rd378;\n"
"add.s64 %rd380, %rd379, %rd373;\n"
"ld.global.u32 %r503, [%rd380];\n"
"sub.s32 %r597, %r502, %r503;\n"
"\n"
"BB0_131:\n"
"ld.const.u32 %r225, [d_common+468];\n"
"setp.ge.s32\t%p123, %r1, %r225;\n"
"@%p123 bra BB0_134;\n"
"\n"
"ld.const.u64 %rd381, [%rd1+136];\n"
"cvta.to.global.u64 %rd382, %rd381;\n"
"add.s32 %r504, %r597, -1;\n"
"ld.const.u32 %r505, [d_common+460];\n"
"mul.lo.s32 %r506, %r505, %r504;\n"
"add.s32 %r507, %r1, 1;\n"
"sub.s32 %r508, %r507, %r506;\n"
"sub.s32 %r598, %r508, %r596;\n"
"mul.wide.s32 %rd383, %r1, 4;\n"
"add.s64 %rd469, %rd382, %rd383;\n"
"mov.u32 %r661, %r1;\n"
"\n"
"BB0_133:\n"
"setp.eq.s32\t%p124, %r598, 0;\n"
"selp.f32\t%f124, 0f3F800000, 0f00000000, %p124;\n"
"st.global.f32 [%rd469], %f124;\n"
"add.s32 %r598, %r598, 256;\n"
"add.s64 %rd469, %rd469, 1024;\n"
"add.s32 %r661, %r661, 256;\n"
"setp.lt.s32\t%p125, %r661, %r225;\n"
"@%p125 bra BB0_133;\n"
"\n"
"BB0_134:\n"
"bar.sync 0;\n"
"ld.const.u32 %r231, [d_common+500];\n"
"setp.ge.s32\t%p126, %r1, %r231;\n"
"@%p126 bra BB0_142;\n"
"\n"
"ld.const.u64 %rd384, [%rd1+120];\n"
"cvta.to.global.u64 %rd148, %rd384;\n"
"ld.const.u64 %rd385, [%rd1+152];\n"
"cvta.to.global.u64 %rd149, %rd385;\n"
"ld.const.u64 %rd386, [%rd1+136];\n"
"cvta.to.global.u64 %rd150, %rd386;\n"
"ld.const.u32 %r232, [d_common+492];\n"
"ld.const.u32 %r233, [d_common+512];\n"
"ld.const.u32 %r234, [d_common+464];\n"
"ld.const.u32 %r235, [d_common+508];\n"
"ld.const.u32 %r236, [d_common+460];\n"
"ld.const.u32 %r237, [d_common+480];\n"
"mov.u32 %r509, 1;\n"
"sub.s32 %r238, %r509, %r237;\n"
"ld.const.u32 %r239, [d_common+476];\n"
"neg.s32 %r240, %r239;\n"
"mov.u32 %r660, %r1;\n"
"\n"
"BB0_136:\n"
"add.s32 %r510, %r660, 1;\n"
"rem.s32 %r511, %r510, %r232;\n"
"div.s32 %r242, %r510, %r232;\n"
"setp.eq.s32\t%p127, %r511, 0;\n"
"setp.ne.s32\t%p128, %r511, 0;\n"
"selp.u32\t%r243, 1, 0, %p128;\n"
"selp.b32\t%r244, %r232, %r511, %p127;\n"
"add.s32 %r512, %r233, %r242;\n"
"add.s32 %r513, %r512, %r243;\n"
"setp.ge.s32\t%p129, %r513, %r237;\n"
"add.s32 %r514, %r238, %r513;\n"
"selp.b32\t%r600, %r514, 1, %p129;\n"
"min.s32 %r246, %r234, %r513;\n"
"add.s32 %r247, %r235, %r244;\n"
"min.s32 %r248, %r236, %r247;\n"
"setp.gt.s32\t%p130, %r600, %r246;\n"
"mov.f32 %f153, 0f00000000;\n"
"@%p130 bra BB0_141;\n"
"\n"
"add.s32 %r516, %r247, 1;\n"
"setp.ge.s32\t%p131, %r247, %r239;\n"
"sub.s32 %r517, %r516, %r239;\n"
"selp.b32\t%r249, %r517, 1, %p131;\n"
"setp.gt.s32\t%p132, %r239, %r247;\n"
"selp.b32\t%r519, %r239, %r247, %p132;\n"
"add.s32 %r250, %r240, %r519;\n"
"add.s32 %r520, %r233, %r243;\n"
"add.s32 %r521, %r520, %r242;\n"
"setp.gt.s32\t%p133, %r237, %r521;\n"
"selp.b32\t%r522, %r237, %r521, %p133;\n"

"add.s32 %r523, %r238, %r522;\n"
"add.s32 %r524, %r523, -1;\n"
"mad.lo.s32 %r251, %r236, %r524, %r250;\n"
"mov.f32 %f153, 0f00000000;\n"
"mov.u32 %r599, 0;\n"
"\n"
"BB0_138:\n"
"mov.u32 %r253, %r600;\n"
"mad.lo.s32 %r525, %r236, %r599, %r251;\n"
"mul.wide.s32 %rd387, %r525, 4;\n"
"add.s64 %rd470, %rd150, %rd387;\n"
"setp.gt.s32\t%p134, %r249, %r248;\n"
"mov.u32 %r601, %r250;\n"
"@%p134 bra BB0_140;\n"
"\n"
"BB0_139:\n"
"mov.u32 %r254, %r601;\n"
"ld.global.f32 %f127, [%rd470];\n"
"add.f32 %f153, %f153, %f127;\n"
"add.s64 %rd470, %rd470, 4;\n"
"add.s32 %r255, %r254, 1;\n"
"setp.lt.s32\t%p135, %r255, %r248;\n"
"mov.u32 %r601, %r255;\n"
"@%p135 bra BB0_139;\n"
"\n"
"BB0_140:\n"
"add.s32 %r600, %r253, 1;\n"
"add.s32 %r599, %r599, 1;\n"
"setp.lt.s32\t%p136, %r253, %r246;\n"
"@%p136 bra BB0_138;\n"
"\n"
"BB0_141:\n"
"mul.wide.s32 %rd388, %r660, 4;\n"
"add.s64 %rd389, %rd148, %rd388;\n"
"ld.global.f32 %f128, [%rd389];\n"
"mul.f32 %f129, %f153, %f128;\n"
"add.s64 %rd390, %rd149, %rd388;\n"
"st.global.f32 [%rd390], %f129;\n"
"add.s32 %r660, %r660, 256;\n"
"setp.lt.s32\t%p137, %r660, %r231;\n"
"@%p137 bra BB0_136;\n"
"\n"
"BB0_142:\n"
"bar.sync 0;\n"
"ld.const.u32 %r259, [d_common+492];\n"
"setp.ge.s32\t%p138, %r1, %r259;\n"
"@%p138 bra BB0_147;\n"
"\n"
"ld.const.u64 %rd391, [%rd1+152];\n"
"cvta.to.global.u64 %rd154, %rd391;\n"
"ld.const.u32 %r260, [d_common+496];\n"
"shl.b32 %r261, %r259, 8;\n"
"mul.lo.s32 %r262, %r1, %r259;\n"
"mov.u32 %r527, 0;\n"
"mov.f32 %f154, 0f00000000;\n"
"mov.u32 %r602, %r527;\n"
"mov.u32 %r612, %r527;\n"
"mov.u32 %r659, %r1;\n"
"\n"
"BB0_144:\n"
"mov.u32 %r606, %r612;\n"
"mov.u32 %r609, %r606;\n"
"mad.lo.s32 %r603, %r261, %r602, %r262;\n"
"mul.wide.s32 %rd392, %r603, 4;\n"
"add.s64 %rd471, %rd154, %rd392;\n"
"setp.lt.s32\t%p139, %r260, 1;\n"
"mov.u32 %r610, %r609;\n"
"mov.u32 %r611, %r527;\n"
"@%p139 bra BB0_146;\n"
"\n"
"BB0_145:\n"
"mov.u32 %r268, %r611;\n"
"ld.global.f32 %f131, [%rd471];\n"
"abs.f32 %f132, %f131;\n"
"setp.gt.f32\t%p140, %f132, %f154;\n"
"selp.b32\t%r609, %r603, %r609, %p140;\n"
"selp.f32\t%f154, %f132, %f154, %p140;\n"
"add.s32 %r603, %r603, 1;\n"
"add.s64 %rd471, %rd471, 4;\n"
"add.s32 %r272, %r268, 1;\n"
"setp.lt.s32\t%p141, %r272, %r260;\n"
"mov.u32 %r610, %r609;\n"
"mov.u32 %r611, %r272;\n"
"@%p141 bra BB0_145;\n"
"\n"
"BB0_146:\n"
"mov.u32 %r612, %r610;\n"
"mul.wide.s32 %rd393, %r659, 4;\n"
"mov.u64 %rd394, _Z6kernelv$__cuda_local_var_47826_30_non_const_par_max_coo;\n"
"add.s64 %rd395, %rd394, %rd393;\n"
"st.shared.u32 [%rd395], %r612;\n"
"mov.u64 %rd396, _Z6kernelv$__cuda_local_var_47825_32_non_const_par_max_val;\n"
"add.s64 %rd397, %rd396, %rd393;\n"
"st.shared.f32 [%rd397], %f154;\n"
"add.s32 %r659, %r659, 256;\n"
"setp.lt.s32\t%p142, %r659, %r259;\n"
"add.s32 %r602, %r602, 1;\n"
"@%p142 bra BB0_144;\n"
"\n"
"BB0_147:\n"
"bar.sync 0;\n"
"@!%p110 bra BB0_153;\n"
"bra.uni BB0_148;\n"
"\n"
"BB0_148:\n"
"ld.const.u32 %r276, [d_common+492];\n"
"mov.u32 %r617, 0;\n"
"mov.f32 %f157, 0f00000000;\n"
"mov.u32 %r618, %r617;\n"
"mov.u32 %r613, %r617;\n"
"mov.u64 %rd473, _Z6kernelv$__cuda_local_var_47826_30_non_const_par_max_coo;\n"
"mov.u64 %rd472, _Z6kernelv$__cuda_local_var_47825_32_non_const_par_max_val;\n"
"setp.lt.s32\t%p143, %r276, 1;\n"
"@%p143 bra BB0_152;\n"
"\n"
"BB0_149:\n"
"mov.u32 %r614, %r618;\n"
"mov.u32 %r619, %r614;\n"
"mov.f32 %f155, %f157;\n"
"mov.f32 %f41, %f155;\n"
"ld.shared.f32 %f42, [%rd472];\n"
"setp.leu.f32\t%p144, %f42, %f41;\n"
"mov.f32 %f158, %f41;\n"
"@%p144 bra BB0_151;\n"
"\n"
"ld.shared.u32 %r619, [%rd473];\n"
"mov.f32 %f158, %f42;\n"
"\n"
"BB0_151:\n"
"mov.u32 %r618, %r619;\n"
"mov.f32 %f157, %f158;\n"
"add.s64 %rd473, %rd473, 4;\n"
"add.s64 %rd472, %rd472, 4;\n"
"add.s32 %r613, %r613, 1;\n"
"setp.lt.s32\t%p145, %r613, %r276;\n"
"mov.u32 %r617, %r618;\n"
"@%p145 bra BB0_149;\n"
"\n"
"BB0_152:\n"
"add.s32 %r532, %r617, 1;\n"
"rem.s32 %r533, %r532, %r276;\n"
"div.s32 %r534, %r532, %r276;\n"
"setp.eq.s32\t%p146, %r533, 0;\n"
"selp.b32\t%r535, %r276, %r533, %p146;\n"
"selp.b32\t%r536, -1, 0, %p146;\n"
"ld.const.u32 %r537, [d_common+204];\n"
"sub.s32 %r538, %r535, %r537;\n"
"ld.const.v2.u32 {%r539, %r540}, [d_common];\n"
"sub.s32 %r543, %r540, %r539;\n"
"add.s32 %r544, %r538, %r543;\n"
"ld.const.u32 %r545, [d_common+208];\n"
"ld.const.u32 %r546, [d_common+16];\n"
"ld.const.u32 %r547, [%rd1+40];\n"
"ld.const.u32 %r548, [d_common_change+8];\n"
"mad.lo.s32 %r549, %r546, %r547, %r548;\n"
"ld.const.u64 %rd400, [%rd1];\n"
"cvta.to.global.u64 %rd401, %rd400;\n"
"mul.wide.s32 %rd402, %r547, 4;\n"
"add.s64 %rd403, %rd401, %rd402;\n"
"ld.global.u32 %r550, [%rd403];\n"
"add.s32 %r551, %r544, %r550;\n"
"ld.const.u64 %rd404, [%rd1+16];\n"
"cvta.to.global.u64 %rd405, %rd404;\n"
"mul.wide.s32 %rd406, %r549, 4;\n"
"add.s64 %rd407, %rd405, %rd406;\n"
"ld.const.u64 %rd408, [%rd1+8];\n"
"ld.const.u64 %rd409, [%rd1+24];\n"
"st.global.u32 [%rd407], %r551;\n"
"cvta.to.global.u64 %rd410, %rd408;\n"
"add.s64 %rd411, %rd410, %rd402;\n"
"add.s32 %r552, %r534, %r536;\n"
"add.s32 %r553, %r552, 1;\n"
"sub.s32 %r554, %r553, %r545;\n"
"add.s32 %r555, %r554, %r543;\n"
"ld.global.u32 %r556, [%rd411];\n"
"add.s32 %r557, %r555, %r556;\n"
"cvta.to.global.u64 %rd412, %rd409;\n"
"add.s64 %rd413, %rd412, %rd406;\n"
"st.global.u32 [%rd413], %r557;\n"
"\n"
"BB0_153:\n"
"bar.sync 0;\n"
"ld.const.u32 %r620, [d_common_change+8];\n"
"\n"
"BB0_154:\n"
"mul.hi.s32 %r558, %r620, 1717986919;\n"
"shr.u32 %r559, %r558, 31;\n"
"shr.s32 %r560, %r558, 2;\n"
"add.s32 %r561, %r560, %r559;\n"
"mul.lo.s32 %r562, %r561, 10;\n"
"sub.s32 %r563, %r620, %r562;\n"
"setp.eq.s32\t%p147, %r563, 0;\n"
"setp.ne.s32\t%p148, %r620, 0;\n"
"and.pred %p149, %p148, %p147;\n"
"@!%p149 bra BB0_158;\n"
"bra.uni BB0_155;\n"
"\n"
"BB0_155:\n"
"ld.const.u64 %rd163, [d_common+16];\n"
"cvt.u32.u64\t%r564, %rd163;\n"
"ld.const.u32 %r565, [%rd1+40];\n"
"mad.lo.s32 %r566, %r564, %r565, %r620;\n"
"ld.const.u64 %rd414, [%rd1+16];\n"
"cvta.to.global.u64 %rd415, %rd414;\n"
"mul.wide.s32 %rd416, %r566, 4;\n"
"add.s64 %rd417, %rd415, %rd416;\n"
"ld.global.u32 %r567, [%rd417];\n"
"ld.const.u64 %rd418, [%rd1];\n"
"cvta.to.global.u64 %rd419, %rd418;\n"
"mul.wide.s32 %rd420, %r565, 4;\n"
"add.s64 %rd164, %rd419, %rd420;\n"
"ld.const.u64 %rd421, [%rd1+24];\n"
"ld.const.u64 %rd422, [%rd1+8];\n"
"st.global.u32 [%rd164], %r567;\n"
"cvta.to.global.u64 %rd423, %rd421;\n"
"add.s64 %rd424, %rd423, %rd416;\n"
"ld.global.u32 %r621, [%rd424];\n"
"cvta.to.global.u64 %rd425, %rd422;\n"
"add.s64 %rd165, %rd425, %rd420;\n"
"st.global.u32 [%rd165], %r621;\n"
"ld.const.u32 %r286, [d_common+212];\n"
"setp.ge.s32\t%p150, %r1, %r286;\n"
"@%p150 bra BB0_158;\n"
"\n"
"shr.u64 %rd426, %rd163, 32;\n"
"cvt.u32.u64\t%r287, %rd426;\n"
"ld.const.u32 %r288, [d_common+204];\n"
"ld.const.f32 %f44, [d_common+12];\n"
"cvt.f64.f32\t%fd2, %f44;\n"
"mov.f64 %fd3, 0d3FF0000000000000;\n"
"sub.f64 %fd1, %fd3, %fd2;\n"
"ld.const.u64 %rd427, [d_common_change];\n"
"cvta.to.global.u64 %rd166, %rd427;\n"
"mul.wide.s32 %rd428, %r1, 4;\n"
"add.s64 %rd475, %rd474, %rd428;\n"
"mov.u32 %r658, %r1;\n"
"bra.uni BB0_157;\n"
"\n"
"BB0_159:\n"
"ld.global.u32 %r621, [%rd165];\n"
"add.s64 %rd475, %rd475, 1024;\n"
"\n"
"BB0_157:\n"
"mov.u32 %r289, %r621;\n"
"add.s32 %r568, %r658, 1;\n"
"rem.s32 %r569, %r568, %r288;\n"
"div.s32 %r570, %r568, %r288;\n"
"setp.eq.s32\t%p151, %r569, 0;\n"
"selp.b32\t%r571, -1, 0, %p151;\n"
"selp.b32\t%r572, %r288, %r569, %p151;\n"
"add.s32 %r573, %r570, %r571;\n"
"add.s32 %r574, %r573, %r289;\n"
"add.s32 %r575, %r574, -26;\n"
"ld.global.u32 %r576, [%rd164];\n"
"add.s32 %r577, %r572, %r576;\n"
"add.s32 %r578, %r577, -27;\n"
"mad.lo.s32 %r579, %r575, %r287, %r578;\n"
"ld.global.f32 %f134, [%rd475];\n"
"mul.f32 %f135, %f44, %f134;\n"
"cvt.f64.f32\t%fd4, %f135;\n"
"mul.wide.s32 %rd429, %r579, 4;\n"
"add.s64 %rd430, %rd166, %rd429;\n"
"ld.global.f32 %f136, [%rd430];\n"
"cvt.f64.f32\t%fd5, %f136;\n"
"fma.rn.f64 %fd6, %fd1, %fd5, %fd4;\n"
"cvt.rn.f32.f64\t%f137, %fd6;\n"
"st.global.f32 [%rd475], %f137;\n"
"add.s32 %r658, %r658, 256;\n"
"setp.lt.s32\t%p152, %r658, %r286;\n"
"@%p152 bra BB0_159;\n"
"\n"
"BB0_158:\n"
"ret;\n"
"}\n"
"\n"
"  ";

static const char* PTX_CODE4 = 
".visible .entry __slimcuda_init(\n"
".param .align 8 .b8 __slimcuda_init_param_0[32]\n"
")\n"
"{ }\n"
"\n"
".version 4.3\n"
".target sm_30\n"
".address_size 64\n"
"\n"
"\n"
".global .align 8 .b8 __device_area[32];\n"
"\n"
".visible .func (.param .b64 func_retval0) __slimcuda_gettid(\n"
".param .b32 __slimcuda_gettid_param_0\n"
")\n"
"{\n"
".reg .b32 %r<16>;\n"
".reg .b64 %rd<7>;\n"
"\n"
"\n"
"ld.param.u32 %rd1, [__slimcuda_gettid_param_0];\n"
"shl.b64 %rd2, %rd1, 48;\n"
"mov.u32 %r1, %ctaid.x;\n"
"mov.u32 %r2, %ctaid.y;\n"
"mov.u32 %r3, %nctaid.x;\n"
"mov.u32 %r4, %nctaid.y;\n"
"mov.u32 %r5, %ctaid.z;\n"
"mad.lo.s32 %r6, %r5, %r4, %r2;\n"
"mad.lo.s32 %r7, %r6, %r3, %r1;\n"
"mul.wide.u32 %rd3, %r7, 65536;\n"
"or.b64 %rd4, %rd3, %rd2;\n"
"mov.u32 %r8, %tid.z;\n"
"mov.u32 %r9, %ntid.x;\n"
"mov.u32 %r10, %ntid.y;\n"
"mov.u32 %r11, %tid.y;\n"
"mov.u32 %r12, %tid.x;\n"
"mad.lo.s32 %r13, %r10, %r8, %r11;\n"
"mad.lo.s32 %r14, %r13, %r9, %r12;\n"
"shr.u32 %r15, %r14, 5;\n"
"cvt.u64.u32\t%rd5, %r15;\n"
"or.b64 %rd6, %rd4, %rd5;\n"
"st.param.b64\t[func_retval0+0], %rd6;\n"
"ret;\n"
"}\n"
"\n"
"\n"
".visible .entry __slimcuda_init(\n"
".param .align 8 .b8 __slimcuda_init_param_0[32]\n"
")\n"
"{\n"
#if 0
".reg .pred %p<3>;\n"
".reg .b32 %r<8>;\n"
".reg .b64 %rd<19>;\n"
"\n"
"\n"
"ld.param.u32 %r4, [__slimcuda_init_param_0+24];\n"
"ld.param.u64 %rd17, [__slimcuda_init_param_0+16];\n"
"ld.param.u64 %rd10, [__slimcuda_init_param_0+8];\n"
"ld.param.u64 %rd18, [__slimcuda_init_param_0];\n"
"st.global.u64 [__device_area], %rd18;\n"
"st.global.u64 [__device_area+8], %rd10;\n"
"st.global.u64 [__device_area+16], %rd17;\n"
"st.global.u32 [__device_area+24], %r4;\n"
"setp.eq.s32\t%p1, %r4, 0;\n"
"mov.u64 %rd9, 0;\n"
"mov.u32 %r7, 1;\n"
"@%p1 bra BB1_4;\n"
"\n"
"mov.u64 %rd16, %rd9;\n"
"bra.uni BB1_2;\n"
"\n"
"BB1_3:\n"
"ld.global.u64 %rd18, [__device_area];\n"
"ld.global.u64 %rd17, [__device_area+16];\n"
"add.s64 %rd8, %rd3, 1;\n"
"add.s32 %r7, %r7, 1;\n"
"mov.u64 %rd16, %rd8;\n"
"\n"
"BB1_2:\n"
"mov.u64 %rd5, %rd18;\n"
"mov.u64 %rd4, %rd17;\n"
"mov.u64 %rd3, %rd16;\n"
"mul.lo.s64 %rd11, %rd4, 288;\n"
"add.s64 %rd12, %rd11, 64;\n"
"mul.lo.s64 %rd13, %rd12, %rd3;\n"
"add.s64 %rd14, %rd5, %rd13;\n"
"st.u32 [%rd14+4], %rd9;\n"
"st.u32 [%rd14], %rd9;\n"
"mov.u32 %r5, 0;\n"
"st.u32 [%rd14+8], %r5;\n"
"ld.global.u32 %r6, [__device_area+24];\n"
"setp.ge.u32\t%p2, %r7, %r6;\n"
"@%p2 bra BB1_4;\n"
"bra.uni BB1_3;\n"
"\n"
"BB1_4:\n"
"membar.sys;\n"
"ret;\n"
#endif
"}\n"
"\n"
"\n"
".visible .entry stub_gettid_kernel(\n"
".param .u64 stub_gettid_kernel_param_0\n"
")\n"
"{\n"
".reg .b32 %r<2>;\n"
".reg .b64 %rd<4>;\n"
"\n"
"\n"
"ld.param.u64 %rd1, [stub_gettid_kernel_param_0];\n"
"cvta.to.global.u64 %rd2, %rd1;\n"
"mov.u32 %r1, 4660;\n"
"\n"
"\t{\n"
".reg .b32 temp_param_reg;\n"
"\n"
"\t.param .b32 param0;\n"
"st.param.b32\t[param0+0], %r1;\n"
".param .b64 retval0;\n"
"call.uni (retval0), \n"
"__slimcuda_gettid, \n"
"(\n"
"param0\n"
");\n"
"ld.param.b64\t%rd3, [retval0+0];\n"
"\n"
"\n"
"\t}\n"
"\tst.global.u64 [%rd2], %rd3;\n"
"ret;\n"
"}\n"
"\n"
"\n"
".visible .func _ZN10DeviceAreaC1Ev(\n"
".param .b64 _ZN10DeviceAreaC1Ev_param_0\n"
")\n"
"{\n"
"\n"
"\n"
"\n"
"ret;\n"
"}\n"
"\n"
"\n"
".visible .func _ZN10DeviceAreaC2Ev(\n"
".param .b64 _ZN10DeviceAreaC2Ev_param_0\n"
")\n"
"{\n"
"\n"
"\n"
"\n"
"ret;\n"
"}\n"
"\n"
"\n"
"";

const char* PTX_CODE5 =
""
".visible .func (.param .b32 func_retval0) _Z9addOffsetPVjjj(\n"
".param .b64 _Z9addOffsetPVjjj_param_0,\n"
".param .b32 _Z9addOffsetPVjjj_param_1,\n"
".param .b32 _Z9addOffsetPVjjj_param_2\n"
")\n"
"{\n"
"tex.2dms.v4.s32.s32 { r0,r1,r2,r3 }, [tex_ms, smpl_x, { sample,r6,r7,r8 }];\n"
"tex.1d.v4.f32.s32 {%f10,%f11,%f12,%f13}, [t_features];\n"
"tex.grad.3d.v4.f32.f32 {%f4,%f5,%f6,%f7},[tex_3d,{%f0,%f0,%f0,%f0}],     {fl0, fl1, fl2, fl3}, { fl0,fl1,fl2,fl3 };\n"
"tex.1d.v4.f32.s32\t{%f10, %f11, %f12, %f13}, [t_features, {%r15}];\n"
"$Lt_0_12546:\n"
"mov.s32 %r7, 1;\n"
"$Lt_0_12546:\n"
"\t.loc 14\t52\t0\n"
"}\n"
"\n"
".visible .func _Z13__taccessmodei(\n"
".param .b32 _Z13__taccessmodei_param_0\n"
")\n"
"{\n"
"\n"
"\n"
"\n"
"ret;\n"
"}\n"
"\n"
;/* ".global\t.texref texPivot;\n"
".file\t1\t\"<command-line>\"\n";
*/
const char* TESTS[] = { PTX_CODE1, PTX_CODE2, PTX_CODE3, PTX_CODE4, PTX_CODE5 };

std::string read_file(const std::string& filename)
{
	std::ifstream stream(filename);
	std::string str;

	stream.seekg(0, std::ios::end);
	str.reserve((unsigned int)stream.tellg());
	stream.seekg(0, std::ios::beg);

	str.assign((std::istreambuf_iterator<char>(stream)), std::istreambuf_iterator<char>());
	return str;
}

int main(int argc, char* argv[])
{
	std::string ptx_text;
	std::string in_file_name, out_file_name;

	switch (argc)
	{
	int idx;
	case 2:
		idx = atoi(argv[1]);
		if (idx >= (sizeof(TESTS)/sizeof(TESTS[0])))
		{
			fprintf(stderr, "Invalid test number!\n");
			return 1;
		}
		ptx_text = TESTS[idx];
		in_file_name = "internal";
		break;

	case 3:
		in_file_name = argv[1];
		ptx_text = read_file(in_file_name);
		out_file_name = argv[2];
		break;

	default:
		fprintf(stderr, "Syntax:\n");
		fprintf(stderr, "%s input.ptx output.ptx\n", argv[0]);
		fprintf(stderr, "%s {1-4} - builtin test PTX code.\n", argv[0]);
		return false;
	}

	PtxParser parser;
	PtxParser::ParseStatus status;
	if(!parser.parse_ptx(ptx_text, &status))
	{
		printf("Failed parsing last %i chars of PTX\n", status.left);
		std::string error = ptx_text.substr(status.parsed);
		auto pos = error.find_first_of('\n');
		if (pos != std::string::npos)
			error = error.substr(0, pos + 1);
		fprintf(stderr, "At %s:%i: %s\n", in_file_name.c_str(), status.line, error.c_str());
	}

	if (out_file_name.size() > 0 && out_file_name != "-")
    {
    	std::ofstream out(argv[2]);
    	parser.ptx().print(out);
    }
	else 
		parser.ptx().print(std::cout);

	return status.left;
}
