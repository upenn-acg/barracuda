.version 4.3
.target sm_30
.address_size 64


.extern .func (.param .b32 func_retval0) vprintf
(
.param .b64 vprintf_param_0,
.param .b64 vprintf_param_1
)
;
.global .align 8 .b8 __slimgpu_dev_area[32];
.global .align 1 .b8 $str[5] = {66, 76, 65, 33, 0};

.visible .func (.param .b64 func_retval0) __slimgpu_gettid(
.param .b32 __slimgpu_gettid_param_0
)
{
.reg .b32 %r<16>;
.reg .b64 %rd<7>;


ld.param.u32 %rd1, [__slimgpu_gettid_param_0];
shl.b64 %rd2, %rd1, 48;
mov.u32 %r1, %ctaid.x;
mov.u32 %r2, %ctaid.y;
mov.u32 %r3, %nctaid.x;
mov.u32 %r4, %nctaid.y;
mov.u32 %r5, %ctaid.z;
mad.lo.s32 %r6, %r5, %r4, %r2;
mad.lo.s32 %r7, %r6, %r3, %r1;
mul.wide.u32 %rd3, %r7, 65536;
or.b64 %rd4, %rd3, %rd2;
mov.u32 %r8, %tid.z;
mov.u32 %r9, %ntid.x;
mov.u32 %r10, %ntid.y;
mov.u32 %r11, %tid.y;
mov.u32 %r12, %tid.x;
mad.lo.s32 %r13, %r10, %r8, %r11;
mad.lo.s32 %r14, %r13, %r9, %r12;
shr.u32 %r15, %r14, 5;
cvt.u64.u32	%rd5, %r15;
or.b64 %rd6, %rd4, %rd5;
st.param.b64	[func_retval0+0], %rd6;
ret;
}


.visible .func __slimgpu_log(
.param .b64 __slimgpu_log_param_0,
.param .b64 __slimgpu_log_param_1,
.param .b32 __slimgpu_log_param_2,
.param .b32 __slimgpu_log_param_3
)
{
.reg .pred %p<8>;
.reg .b16 %rs<5>;
.reg .b32 %r<37>;
.reg .b64 %rd<22>;


ld.param.u64 %rd7, [__slimgpu_log_param_0];
ld.param.u64 %rd8, [__slimgpu_log_param_1];
ld.param.u32 %r9, [__slimgpu_log_param_2];
ld.param.u32 %r10, [__slimgpu_log_param_3];
mov.u32 %r12, 1;

	{ 
.reg .pred %p1; 
setp.ne.u32 %p1, %r12, 0; 
vote.ballot.b32 %r11, %p1; 
}

	
	mov.u32 %r13, %laneid;

	neg.s32 %r15, %r11;
and.b32 %r16, %r11, %r15;
clz.b32 %r17, %r16;
mov.u32 %r18, 31;
sub.s32 %r3, %r18, %r17;
ld.global.u32 %r19, [__slimgpu_dev_area+24];
mov.u32 %r20, %ctaid.x;
rem.u32 %r21, %r20, %r19;
ld.global.u64 %rd9, [__slimgpu_dev_area+16];
cvt.u32.u64	%r4, %rd9;
cvt.u64.u32	%rd10, %r21;
mul.lo.s64 %rd11, %rd9, 272;
add.s64 %rd12, %rd11, 64;
mul.lo.s64 %rd1, %rd12, %rd10;
ld.global.u64 %rd2, [__slimgpu_dev_area];
mov.u32 %r36, 0;
setp.ne.s32	%p1, %r3, %r13;
@%p1 bra BB1_3;

add.s64 %rd13, %rd1, %rd2;
add.s64 %rd3, %rd13, 8;
add.s64 %rd14, %rd13, 4;
atom.add.u32 %r36, [%rd14], 1;
ld.volatile.u32 %r22, [%rd13+8];
sub.s32 %r23, %r36, %r22;
setp.lt.u32	%p2, %r23, %r4;
@%p2 bra BB1_3;

BB1_2:
membar.sys;
ld.volatile.u32 %r24, [%rd3];
sub.s32 %r25, %r36, %r24;
setp.ge.u32	%p3, %r25, %r4;
@%p3 bra BB1_2;

BB1_3:
add.s64 %rd4, %rd2, %rd1;
add.s64 %rd5, %rd4, 64;

	shfl.idx.b32 %r26, %r36, %r3, %r18;

	rem.s32 %r30, %r26, %r4;
cvt.s64.s32	%rd6, %r30;
mul.wide.s32 %rd15, %r30, 272;
add.s64 %rd16, %rd5, %rd15;
mul.wide.u32 %rd17, %r13, 8;
add.s64 %rd18, %rd16, %rd17;
st.u64 [%rd18+16], %rd8;
@%p1 bra BB1_6;

mul.lo.s64 %rd20, %rd6, 272;
add.s64 %rd21, %rd5, %rd20;
st.u64 [%rd21], %rd7;
st.u32 [%rd21+8], %r11;

	{ 
.reg .pred p; 
isspacep.global p, %rd8; 
selp.u32 %r31, 1, 0, p; 
} 


	setp.eq.s32	%p5, %r31, 0;
selp.b32	%r32, 0, 256, %p5;
cvt.u16.u32	%rs1, %r9;
cvt.u16.u32	%rs2, %r32;
or.b16 %rs3, %rs2, %rs1;
cvt.u16.u32	%rs4, %r10;
st.v2.u16 [%rd21+12], {%rs3, %rs4};
add.s32 %r8, %r26, 1;
atom.cas.b32 %r33, [%rd4], %r26, %r8;
setp.eq.s32	%p6, %r33, %r26;
@%p6 bra BB1_6;

BB1_5:
membar.gl;
add.s32 %r35, %r26, 1;
atom.cas.b32 %r34, [%rd4], %r26, %r35;
setp.ne.s32	%p7, %r34, %r26;
@%p7 bra BB1_5;

BB1_6:
membar.sys;
ret;
}


.visible .entry __slimgpu_init(
.param .align 8 .b8 __slimgpu_init_param_0[32]
)
{
.reg .pred %p<3>;
.reg .b16 %rs<5>;
.reg .b32 %r<8>;
.reg .b64 %rd<19>;


ld.param.u32 %r4, [__slimgpu_init_param_0+24];
ld.param.u64 %rd17, [__slimgpu_init_param_0+16];
ld.param.u64 %rd10, [__slimgpu_init_param_0+8];
ld.param.u64 %rd18, [__slimgpu_init_param_0];
st.global.u64 [__slimgpu_dev_area], %rd18;
st.global.u64 [__slimgpu_dev_area+8], %rd10;
st.global.u64 [__slimgpu_dev_area+16], %rd17;
st.global.u32 [__slimgpu_dev_area+24], %r4;
ld.param.u8 %rs1, [__slimgpu_init_param_0+31];
ld.param.u8 %rs2, [__slimgpu_init_param_0+30];
ld.param.u8 %rs3, [__slimgpu_init_param_0+29];
ld.param.u8 %rs4, [__slimgpu_init_param_0+28];
st.global.v4.u8 [__slimgpu_dev_area+28], {%rs4, %rs3, %rs2, %rs1};
setp.eq.s32	%p1, %r4, 0;
mov.u64 %rd9, 0;
mov.u32 %r7, 1;
@%p1 bra BB2_4;

mov.u64 %rd16, %rd9;
bra.uni BB2_2;

BB2_3:
ld.global.u64 %rd18, [__slimgpu_dev_area];
ld.global.u64 %rd17, [__slimgpu_dev_area+16];
add.s64 %rd8, %rd3, 1;
add.s32 %r7, %r7, 1;
mov.u64 %rd16, %rd8;

BB2_2:
mov.u64 %rd5, %rd18;
mov.u64 %rd4, %rd17;
mov.u64 %rd3, %rd16;
mul.lo.s64 %rd11, %rd4, 272;
add.s64 %rd12, %rd11, 64;
mul.lo.s64 %rd13, %rd12, %rd3;
add.s64 %rd14, %rd5, %rd13;
st.u32 [%rd14+4], %rd9;
st.u32 [%rd14], %rd9;
mov.u32 %r5, 0;
st.u32 [%rd14+8], %r5;
ld.global.u32 %r6, [__slimgpu_dev_area+24];
setp.ge.u32	%p2, %r7, %r6;
@%p2 bra BB2_4;
bra.uni BB2_3;

BB2_4:
membar.sys;
ret;
}


.visible .entry force_function_linking(
.param .u64 force_function_linking_param_0
)
{
.reg .b32 %r<4>;
.reg .b64 %rd<5>;


ld.param.u64 %rd1, [force_function_linking_param_0];
cvta.to.global.u64 %rd2, %rd1;
mov.u32 %r1, 4660;

	{
.reg .b32 temp_param_reg;

	.param .b32 param0;
st.param.b32	[param0+0], %r1;
.param .b64 retval0;
call.uni (retval0), 
__slimgpu_gettid, 
(
param0
);
ld.param.b64	%rd3, [retval0+0];


	}
	st.global.u64 [%rd2], %rd3;
mov.u64 %rd4, 0;
mov.u32 %r2, 4;
mov.u32 %r3, 1;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd3;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r2;
.param .b32 param3;
st.param.b32	[param3+0], %r3;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	ret;
}


.visible .entry _Z6tstfunPVji(
.param .u64 _Z6tstfunPVji_param_0,
.param .u32 _Z6tstfunPVji_param_1
)
{
.reg .pred %p<6>;
.reg .b32 %r<62>;
.reg .b64 %rd<12>;


ld.param.u64 %rd5, [_Z6tstfunPVji_param_0];
cvta.to.global.u64 %rd6, %rd5;
mov.u32 %r4, 0;

	{
.reg .b32 temp_param_reg;

	.param .b32 param0;
st.param.b32	[param0+0], %r4;
.param .b64 retval0;
call.uni (retval0), 
__slimgpu_gettid, 
(
param0
);
ld.param.b64	%rd1, [retval0+0];


	}
	mov.u32 %r5, %ctaid.x;
mov.u32 %r6, %ntid.x;
mov.u32 %r7, %tid.x;
mad.lo.s32 %r8, %r5, %r6, %r7;
mul.wide.s32 %rd7, %r8, 4;
add.s64 %rd2, %rd6, %rd7;
st.volatile.global.u32 [%rd2], %r4;
add.s64 %rd4, %rd5, %rd7;
mov.u32 %r9, 2;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r9;
.param .b32 param3;
st.param.b32	[param3+0], %r9;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	ld.volatile.global.u32 %r1, [%rd2];
mov.u32 %r10, 1;
mov.u32 %r11, 3;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r10;
.param .b32 param3;
st.param.b32	[param3+0], %r11;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	atom.global.add.u32 %r12, [%rd2], 1;
mov.u32 %r13, 4;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r11;
.param .b32 param3;
st.param.b32	[param3+0], %r13;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	bar.sync 0;
mov.u64 %rd8, 0;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd8;
.param .b32 param2;
st.param.b32	[param2+0], %r13;
.param .b32 param3;
st.param.b32	[param3+0], %r11;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	membar.gl;
atom.global.add.u32 %r16, [%rd2], 1;
mov.u32 %r17, 54;
mov.u32 %r18, 5;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r17;
.param .b32 param3;
st.param.b32	[param3+0], %r18;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	bar.sync 0;
mov.u32 %r20, 6;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r13;
.param .b32 param3;
st.param.b32	[param3+0], %r20;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	membar.gl;
atom.global.add.u32 %r21, [%rd2], 1;
mov.u32 %r23, 7;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r17;
.param .b32 param3;
st.param.b32	[param3+0], %r23;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	bar.sync 0;
mov.u32 %r25, 8;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r13;
.param .b32 param3;
st.param.b32	[param3+0], %r25;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	membar.gl;
st.volatile.global.u32 [%rd2], %r4;
mov.u32 %r27, 34;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r27;
.param .b32 param3;
st.param.b32	[param3+0], %r25;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	bar.sync 0;
mov.u32 %r29, 9;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r13;
.param .b32 param3;
st.param.b32	[param3+0], %r29;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	st.volatile.global.u32 [%rd2], %r4;
mov.u32 %r32, 10;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r9;
.param .b32 param3;
st.param.b32	[param3+0], %r32;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	membar.gl;
bar.sync 0;
mov.u32 %r34, 11;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r13;
.param .b32 param3;
st.param.b32	[param3+0], %r34;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	membar.gl;
ld.volatile.global.u32 %r2, [%rd2];
mov.u32 %r36, 12;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r10;
.param .b32 param3;
st.param.b32	[param3+0], %r36;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	bar.sync 0;
mov.u32 %r38, 13;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r13;
.param .b32 param3;
st.param.b32	[param3+0], %r38;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	membar.gl;
ld.volatile.global.u32 %r3, [%rd2];
mov.u32 %r40, 14;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r10;
.param .b32 param3;
st.param.b32	[param3+0], %r40;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	bar.sync 0;
bar.sync 0;
membar.gl;
atom.global.exch.b32 %r41, [%rd2], 1;
mov.u32 %r42, 38;
mov.u32 %r43, 15;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r42;
.param .b32 param3;
st.param.b32	[param3+0], %r43;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	bar.sync 0;
mov.u32 %r45, 16;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r13;
.param .b32 param3;
st.param.b32	[param3+0], %r45;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	membar.gl;
atom.global.exch.b32 %r46, [%rd2], 1;
mov.u32 %r48, 17;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r42;
.param .b32 param3;
st.param.b32	[param3+0], %r48;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	bar.sync 0;
mov.u32 %r50, 18;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r13;
.param .b32 param3;
st.param.b32	[param3+0], %r50;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	membar.gl;
atom.global.cas.b32 %r51, [%rd2], 0, 1;
mov.u32 %r53, 19;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r11;
.param .b32 param3;
st.param.b32	[param3+0], %r53;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	bar.sync 0;
mov.u32 %r55, 20;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r13;
.param .b32 param3;
st.param.b32	[param3+0], %r55;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	membar.gl;
atom.global.cas.b32 %r56, [%rd2], 0, 1;
mov.u32 %r58, 21;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r11;
.param .b32 param3;
st.param.b32	[param3+0], %r58;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	setp.eq.s32	%p1, %r1, 1122867;
setp.eq.s32	%p2, %r2, 596808451;
or.pred %p3, %p1, %p2;
setp.eq.s32	%p4, %r3, -2070707053;
or.pred %p5, %p3, %p4;
@!%p5 bra BB4_2;
bra.uni BB4_1;

BB4_1:
mov.u64 %rd9, $str;
cvta.global.u64 %rd10, %rd9;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd10;
.param .b64 param1;
st.param.b64	[param1+0], %rd8;
.param .b32 retval0;
call.uni (retval0), 
vprintf, 
(
param0, 
param1
);
ld.param.b32	%r59, [retval0+0];


	}

BB4_2:
mov.u32 %r61, 22;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd1;
.param .b64 param1;
st.param.b64	[param1+0], %rd4;
.param .b32 param2;
st.param.b32	[param2+0], %r18;
.param .b32 param3;
st.param.b32	[param3+0], %r61;
call.uni 
__slimgpu_log, 
(
param0, 
param1, 
param2, 
param3
);


	}
	ret;
}


.visible .func _ZN10DeviceAreaC2Ev(
.param .b64 _ZN10DeviceAreaC2Ev_param_0
)
{



ret;
}


.visible .func _ZN10DeviceAreaD2Ev(
.param .b64 _ZN10DeviceAreaD2Ev_param_0
)
{



ret;
}


